{
  "hash": "550d2411c7decf29ac29b7a2bfa29b32",
  "result": {
    "markdown": "---\ntitle: \"交叉引用\"\nexecute:\n      eval: false\n      warning: false\n---\n\n\n如果要使用交叉引用，则每个待引用对象需要有以下两个元素：\n\n-   `label`：标签。\n\n    ::: callout-caution\n    -   必须以类型为前缀，如#fig-1、#tbl-1、#fig-boxplot\n\n    -   标签名不能重复\n\n    -   标签名最好由英文+下划线组成\n    :::\n\n-   `caption`：标题。\n\n拥有了这两个元素的对象会被自动加上序号，如Figure 1，并可以被交叉引用。 可引用的对象包括：图表、公式、章节、代码和定理等。注意在交叉引用时要在两端加上空格。\n\n::: callout-tip\n有关交叉引用的详细指南，参考：<https://quarto.org/docs/authoring/cross-references.html>。\n:::\n\n## 标题/节的交叉引用\n\n只需通过`sec-`定义`label`，基本语法：Introduction `{#sec-introduction}`。注意：要使用节的引用，需要在YAML开启标题编号（`number-sections: true`），以便读者能够看到这些编号。\n\n## 图片的交叉引用 {#sec-Cross_referencing_of_figs}\n\n实现的方法：\n\n-   方法一：在源代码模式下修改被引用对象的属性，如：`![Example for cross reference](images/crossref-figure.png){#fig-elephant width=\"290\"}`。其中，方括号内的是对象的`caption`，小括号内是图片所在的目录，\"{}\"内的内容是图像的`label`以及其他可选设置。\n-   方法二：点击待引用对象右上角的三个点，进入对象设置。分别输入`caption`和`ID`（即`label`）（@fig-demo )。\n\n::: {#fig-demo layout-ncol=\"2\"}\n![](images/screenshot_2023-11-09%2009.39.02.png){width=\"240\"}\n\n![](images/screenshot_2023-11-09%2009.39.13-01.png){width=\"244\"}\n\n交叉引用的设置\n:::\n\n例如下面的图片，可以被引用：@fig-elephant 。\n\n![Example for cross reference](images/crossref-figure.png){#fig-elephant width=\"290\"}\n\n### 组图的交叉引用\n\n基本语法：\n\n![](images/screenshot_2023-11-09%2015.13.14.png)\n\n案例：\n\n::: {#fig-组图的交叉引用 layout-ncol=\"2\"}\n![素描大象](images/crossref-figure.png){#fig-组图_素描大象 width=\"219\"}\n\n![油画大象](images/screenshot_2023-11-09%2015.02.31.png){#fig-组图-油画大象 width=\"292\"}\n\n组图的交叉引用\n:::\n\n现在，我们就可以将组图一起引用（@fig-组图的交叉引用 ），或是单独引用组图内的某一张图（@fig-组图-油画大象 ，@fig-组图_素描大象 ）。\n\n## 表格的交叉引用\n\n### Markdown表格的引用\n\n只需在表格后加上`: My Caption {#tbl-letters}`即可使该表格能够被引用。如下面的表格 @tbl-表格交叉引用 。\n\n| Col1 | Col2 | Col3 |\n|------|------|------|\n| A    | B    | C    |\n| E    | F    | G    |\n| A    | G    | G    |\n\n: 表格的交叉引用示例 {#tbl-表格交叉引用}\n\n### 代码输出表格的引用\n\n-   `label：tbl-`：表格的标签。\n\n-   `tbl-cap`：表格的标题。\n\n-   knitr包提供了一个 `kable()` 函数可以用来把数据框或矩阵转化成有格式的表格，支持HTML、docx、LaTeX等格式。\n\n\n::: {#tbl-iris .cell tbl-cap='Iris数据' hash='cross_references_cache/html/tbl-iris_e6f74e03256dd432e65bef336562cf1e'}\n\n````{.cell-code}\n```{{r}}\n#| eval: true\n#| label: tbl-iris\n#| tbl-cap: \"Iris数据\"\n\nlibrary(knitr)\nkable(head(iris))\n```\n````\n\n::: {.cell-output-display}\n| Sepal.Length| Sepal.Width| Petal.Length| Petal.Width|Species |\n|------------:|-----------:|------------:|-----------:|:-------|\n|          5.1|         3.5|          1.4|         0.2|setosa  |\n|          4.9|         3.0|          1.4|         0.2|setosa  |\n|          4.7|         3.2|          1.3|         0.2|setosa  |\n|          4.6|         3.1|          1.5|         0.2|setosa  |\n|          5.0|         3.6|          1.4|         0.2|setosa  |\n|          5.4|         3.9|          1.7|         0.4|setosa  |\n:::\n:::\n\n\n现在，就可以通过 @tbl-iris 来引用该表格了。\n\n::: callout-note\n关于表格的详细指南，参考：<https://quarto.org/docs/authoring/tables.html>。\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{
  "hash": "8dc67fb286505871dc39759a946c2721",
  "result": {
    "markdown": "---\ntitle: \"多个单细胞数据集整合分析（上）\"\n---\n\n\n> 参考：[单细胞多数据集整合示例](https://mp.weixin.qq.com/s/51PtUi7ZKp1nbrFGElU74A)\n\n有时候，为了扩大数据量和得到更加可靠的结论，我们可能获取和下载了多个单细胞数据集。如果我们只关注某一细胞类型，如T cells或B cells或髓系细胞，那么就需要合并分析这些数据集，提取感兴趣的细胞亚群。这时候有两种方法可以选择：\n\n-   **对各个数据集分别降维分群，然后提取各个数据集的感兴趣细胞亚群并整合到一起**\n\n-   **在一开始分析的时候就对这些数据集进行整合，然后分群，提起感兴趣细胞群**\n\n**这个部分怎么分析并没有一个特定的答案或者规则，具体还是得看数据集适合以上提出的哪种分析顺序。**\n\n例如[@gong2023]就用了第二种方法。选取了三个鼻咽癌单细胞转录组数据： GSE150825, GSE150430, GSE162025。首先对三组数据进行整合，然后选取其中的一部分T细胞进行进一步分析。\n\n![](images/截屏2024-01-10%2012.00.48.png){width=\"600\"}\n\n这里我们介绍第一种方式，即**对各数据集分别降维分群，然后提取并整合各个数据集的感兴趣细胞亚群。**\n\n# 加载包\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-1_c219338dbc87b401a126d04b4044d291'}\n\n```{.r .cell-code}\nlibrary(Seurat)\nlibrary(ggplot2)\nlibrary(beepr)\nlibrary(cowplot)\nlibrary(dplyr)\nlibrary(clustree)\n```\n:::\n\n\n# 数据导入\n\n这里我们直接载入[读取非标准大体积文本文件单细胞数据](/single_cell/sc_supplementary/read_sc_data.qmd#sec-reading_non_standard_large_volume_text)中构建好的Seurat对象，该案例数据的介绍及读取过程参见该章节。\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-2_6f00a42a16c4e5ac2eae67a0f5f31cb9'}\n\n```{.r .cell-code}\nmerged_seurat <- readRDS(\"output/sc_supplementary/GSE150430_merged_seurat.rds\")\nmerged_seurat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn object of class Seurat \n24720 features across 48584 samples within 1 assay \nActive assay: RNA (24720 features, 0 variable features)\n 16 layers present: counts.1, counts.2, counts.3, counts.4, counts.5, counts.6, counts.7, counts.8, counts.9, counts.10, counts.11, counts.12, counts.13, counts.14, counts.15, counts.16\n```\n:::\n\n```{.r .cell-code}\nhead(merged_seurat, 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                       orig.ident nCount_RNA nFeature_RNA samples\nN01_CAGAATCAGTAATCCC.1        N01   3470.970         4173     N01\nN01_TGCGGGTAGTACGTAA.1        N01   3155.725         2994     N01\nN01_AAACCTGAGGGTTTCT.1        N01   2347.034         1946     N01\nN01_AAACCTGAGTTCCACA.1        N01   2362.495         1993     N01\n```\n:::\n\n```{.r .cell-code}\nunique(merged_seurat$samples)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"N01\" \"P01\" \"P02\" \"P03\" \"P04\" \"P05\" \"P06\" \"P07\" \"P08\" \"P09\" \"P10\" \"P11\"\n[13] \"P12\" \"P13\" \"P14\" \"P15\"\n```\n:::\n:::\n\n\n# 质控\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-3_6e5fc7f9148ab8af3bed26840ce5b19d'}\n\n```{.r .cell-code}\n# Add number of genes per UMI for each cell to metadata\nmerged_seurat$log10GenesPerUMI <- log10(merged_seurat$nFeature_RNA) / log10(merged_seurat$nCount_RNA)\nsummary(merged_seurat$log10GenesPerUMI)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.8897  0.9488  0.9670  0.9773  0.9971  1.1429 \n```\n:::\n\n```{.r .cell-code}\n# Compute percent mito ratio\nmerged_seurat$mitoRatio <- PercentageFeatureSet(object = merged_seurat, \n                                                pattern = \"^MT-\")\nmerged_seurat$mitoRatio <- merged_seurat$mitoRatio / 100\nsummary(merged_seurat$mitoRatio)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n0.0006859 0.0106660 0.0127552 0.0129526 0.0150420 0.0407058 \n```\n:::\n\n```{.r .cell-code}\nboxplot(merged_seurat$mitoRatio)\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-3-1.png){width=288}\n:::\n\n```{.r .cell-code}\n# Add cell IDs to metadata\nmerged_seurat$cells <- rownames(merged_seurat@meta.data)\n```\n:::\n\n::: {.cell layout-ncol=\"2\" hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-4_98fd4778631183eb991ba1d86339253f'}\n\n```{.r .cell-code}\n# Visualize the number of cell counts per sample\nmerged_seurat@meta.data  |> \n    ggplot(aes(x = samples, fill = samples)) + \n    geom_bar() +\n    theme_classic() +\n    theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)) +\n    theme(plot.title = element_text(hjust = 0.5, face = \"bold\")) +\n    ggtitle(\"NCells\")\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Visualize the number UMIs/transcripts per cell\nmerged_seurat@meta.data |> \n    ggplot(aes(color = samples, x = nCount_RNA, fill = samples)) + \n    geom_density(alpha = 0.2) + \n    scale_x_log10() + \n    theme_classic() +\n    ylab(\"Cell density\") +\n    geom_vline(xintercept = 500)\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Visualize the distribution of genes detected per cell via histogram\nmerged_seurat@meta.data |>\n    ggplot(aes(color = samples, x = nFeature_RNA, fill= samples)) + \n    geom_density(alpha = 0.2) + \n    theme_classic() +\n    scale_x_log10() + \n    geom_vline(xintercept = 200)\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-4-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# Visualize the overall complexity of the gene expression by visualizing the genes detected per UMI (novelty score)\nmerged_seurat@meta.data |>\n    ggplot(aes(x = log10GenesPerUMI, color = samples, fill=samples)) +\n    geom_density(alpha = 0.2) +\n    theme_classic() +\n    geom_vline(xintercept = 0.8)\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-4-4.png){width=672}\n:::\n\n```{.r .cell-code}\n# Visualize the distribution of mitochondrial gene expression detected per cell\nmerged_seurat@meta.data |>\n    ggplot(aes(color = samples, x = mitoRatio, fill = samples)) + \n    geom_density(alpha = 0.2) + \n    scale_x_log10() + \n    theme_classic() +\n    geom_vline(xintercept = 0.2)\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-4-5.png){width=672}\n:::\n:::\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-5_2b878f461c8310e864e70f6050e135c7'}\n\n```{.r .cell-code}\n# Visualize the correlation between genes detected and number of UMIs and determine whether strong presence of cells with low numbers of genes/UMIs\nmerged_seurat@meta.data |> \n    ggplot(aes(x = nCount_RNA, y = nFeature_RNA, color = mitoRatio)) + \n    geom_point() + \n    scale_colour_gradient(low = \"gray90\", high = \"black\") +\n    stat_smooth(method = lm) +\n    scale_x_log10() + \n    scale_y_log10() + \n    theme_classic() +\n    geom_vline(xintercept = 500) +\n    geom_hline(yintercept = 250) +\n    facet_wrap(~samples)\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n可以看到该数据集已经进行了质控，各项指标均在正常范围内，因此，我们可以跳过细胞/基因过滤，直接进入下面的环节。\n\n# 归一化及消除非期望变异来源\n\n::: callout-caution\n由于这里`SCTransform`的数据量太大，在我的16GB MacBook Pro上超出了R内存分配上限，出现了“Error: vector memory exhausted (limit reached?)”报错。因此，这里在运行下面的脚本之前通过[提高R内存分配上限（macOS）](/r_basic/environment_configuration.qmd#sec-Raising_memory_limit)的方法进行了处理。\n:::\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-6_7934252e567389d743cdacd0f1ea668e'}\n\n```{.r .cell-code}\n# SCTranform\nmerged_seurat <- SCTransform(merged_seurat, verbose = FALSE); beep()\ngc() # 释放未使用内存\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            used   (Mb) gc trigger    (Mb) limit (Mb)   max used    (Mb)\nNcells   8268868  441.7   15695064   838.3         NA   14114318   753.8\nVcells 988416251 7541.1 3232710770 24663.7     102400 3232709930 24663.7\n```\n:::\n\n```{.r .cell-code}\nmerged_seurat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn object of class Seurat \n46357 features across 48584 samples within 2 assays \nActive assay: SCT (21637 features, 3000 variable features)\n 3 layers present: counts, data, scale.data\n 1 other assay present: RNA\n```\n:::\n\n```{.r .cell-code}\n# Check which assays are stored in objects\nmerged_seurat@assays\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$RNA\nAssay (v5) data with 24720 features for 48584 cells\nFirst 10 features:\n RP11-34P13.7, RP11-34P13.8, AL627309.1, AP006222.2, RP4-669L17.10,\nRP4-669L17.2, RP5-857K21.4, RP11-206L10.3, RP11-206L10.5, RP11-206L10.2 \nLayers:\n counts.1, counts.2, counts.3, counts.4, counts.5, counts.6, counts.7,\ncounts.8, counts.9, counts.10, counts.11, counts.12, counts.13,\ncounts.14, counts.15, counts.16 \n\n$SCT\nSCTAssay data with 21637 features for 48584 cells, and 16 SCTModel(s) \nTop 10 variable features:\n RNASE6, PHACTR1, NR4A3, C1orf162, HMOX1, IFIT2, CD7, CD86, CLNK, CRIP1 \n```\n:::\n\n```{.r .cell-code}\n# 查看目前默认的assay\nDefaultAssay(merged_seurat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"SCT\"\n```\n:::\n\n```{.r .cell-code}\n# 查看默认assay的layers\nLayers(merged_seurat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"counts\"     \"data\"       \"scale.data\"\n```\n:::\n:::\n\n\n## 评估细胞周期的影响\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-7_168d6a1fa6fdfe1a84d997ee2b24f27a'}\n\n```{.r .cell-code}\n# Load cell cycle markers\ns.genes <- cc.genes$s.genes\ng2m.genes <- cc.genes$g2m.genes\n\n# Score cells for cell cycle\nmerged_seurat <- CellCycleScoring(merged_seurat, \n                                  g2m.features = g2m.genes, \n                                  s.features = s.genes)\n\n# 现在的meta.data中多出了细胞周期评分“S.Score”和“G2M.Score”，以及推断的细胞所处的周期“Phase”\nhead(merged_seurat@meta.data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                       orig.ident nCount_RNA nFeature_RNA samples\nN01_CAGAATCAGTAATCCC.1        N01   3470.970         4173     N01\nN01_TGCGGGTAGTACGTAA.1        N01   3155.725         2994     N01\nN01_AAACCTGAGGGTTTCT.1        N01   2347.034         1946     N01\nN01_AAACCTGAGTTCCACA.1        N01   2362.495         1993     N01\nN01_AAACCTGGTTCTCATT.1        N01   2130.465         1459     N01\nN01_AAACGGGGTCCTCCAT.1        N01   2772.010         2573     N01\n                       log10GenesPerUMI   mitoRatio                  cells\nN01_CAGAATCAGTAATCCC.1        1.0225953 0.008644269 N01_CAGAATCAGTAATCCC.1\nN01_TGCGGGTAGTACGTAA.1        0.9934705 0.009895666 N01_TGCGGGTAGTACGTAA.1\nN01_AAACCTGAGGGTTTCT.1        0.9758564 0.015183419 N01_AAACCTGAGGGTTTCT.1\nN01_AAACCTGAGTTCCACA.1        0.9781039 0.014965958 N01_AAACCTGAGTTCCACA.1\nN01_AAACCTGGTTCTCATT.1        0.9506023 0.017437508 N01_AAACCTGGTTCTCATT.1\nN01_AAACGGGGTCCTCCAT.1        0.9906021 0.011233365 N01_AAACGGGGTCCTCCAT.1\n                       nCount_SCT nFeature_SCT     S.Score    G2M.Score Phase\nN01_CAGAATCAGTAATCCC.1       1840         1674 -0.05179250 -0.070444626    G1\nN01_TGCGGGTAGTACGTAA.1       2840         2604 -0.04341940 -0.074302336    G1\nN01_AAACCTGAGGGTTTCT.1       2443         1931 -0.02396942 -0.007239586    G1\nN01_AAACCTGAGTTCCACA.1       2488         1972 -0.01294260 -0.021167805    G1\nN01_AAACCTGGTTCTCATT.1       2104         1451 -0.05440456 -0.049531592    G1\nN01_AAACGGGGTCCTCCAT.1       2892         2520 -0.10189203 -0.087537749    G1\n```\n:::\n\n```{.r .cell-code}\n# 查看一下细胞周期的分布情况\ntable(merged_seurat$Phase)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n   G1   G2M     S \n33941  5147  9496 \n```\n:::\n\n```{.r .cell-code}\n# 执行PCA\nmerged_seurat <- RunPCA(merged_seurat)\n\n# Plot the PCA colored by cell cycle phase\np1 <- DimPlot(merged_seurat,\n              reduction = \"pca\",\n              group.by= \"Phase\")\np2 <- DimPlot(merged_seurat,\n              reduction = \"pca\",\n              group.by= \"Phase\",\n              split.by = \"Phase\")\nplot_grid(p1, p2, ncol = 2, labels = \"AUTO\")\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n可以看到细胞周期不是变异来源。\n\n## **评估线粒体基因的影响**\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-8_0a74e8f08964d9c86ed9894011ffee4a'}\n\n```{.r .cell-code}\n# Check quartile values\nmito_sum <- summary(merged_seurat$mitoRatio)\nmito_sum\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n0.0006859 0.0106660 0.0127552 0.0129526 0.0150420 0.0407058 \n```\n:::\n\n```{.r .cell-code}\n# Turn mitoRatio into categorical factor vector based on quartile values\nmerged_seurat$mitoFr <- cut(merged_seurat$mitoRatio, \n                            breaks=c(-Inf, mito_sum[2], mito_sum[3], mito_sum[5], Inf),\n                            labels=c(\"Low\", \"Medium\", \"Medium high\", \"High\"))\nplot(merged_seurat$mitoFr)\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-8-1.png){width=288}\n:::\n:::\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-9_a20f46c820a13427587c101ae6fc9e90'}\n\n```{.r .cell-code}\n# Plot the PCA colored by cell cycle phase\np1 <- DimPlot(merged_seurat,\n              reduction = \"pca\",\n              group.by= \"mitoFr\")\np2 <- DimPlot(merged_seurat,\n              reduction = \"pca\",\n              group.by= \"mitoFr\",\n              split.by = \"mitoFr\")\nplot_grid(p1, p2, ncol = 2, labels = \"AUTO\")\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-9-1.png){width=1440}\n:::\n:::\n\n\n可以看到线粒体基因比例不是变异来源。\n\n由于细胞周期和线粒体基因比例都不是非期望变异来源，所以我们这里不需要再次运行SCTransform来回归这些变量。接下来，直接进入数据整合环节。\n\n# 数据整合\n\n## **不进行整合时检验细胞分群情况**\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-10_26470ad057188e46b9f077192d404b6a'}\n\n```{.r .cell-code}\n# 查看降维信息\nnames(merged_seurat@reductions)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"pca\"\n```\n:::\n\n```{.r .cell-code}\n# Run UMAP\nmerged_seurat <- RunUMAP(merged_seurat, \n                         dims = 1:40, \n                         reduction = \"pca\",\n                         reduction.name = \"umap.unintegrated\"); beep()\n\n# 分群\n# Determine the K-nearest neighbor graph\nmerged_seurat <- FindNeighbors(merged_seurat, \n                               dims = 1:40, \n                               reduction = \"pca\")\nmerged_seurat <- FindClusters(merged_seurat, \n                              cluster.name = \"unintegrated_clusters\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 48584\nNumber of edges: 1937300\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9298\nNumber of communities: 38\nElapsed time: 7 seconds\n```\n:::\n\n```{.r .cell-code}\n# Plot UMAP\np1 <- DimPlot(merged_seurat, \n              reduction = \"umap.unintegrated\",\n              group.by = \"samples\")\np2 <- DimPlot(merged_seurat, \n              reduction = \"umap.unintegrated\",\n              split.by = \"samples\")\nplot_grid(p1, p2, \n          ncol = 1, labels = \"AUTO\")\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-10-1.png){width=1440}\n:::\n\n```{.r .cell-code}\n# 由于样本数较多，我们再按照样本类型“Normal” vs. “Cancer”画一下UMAP图\nmerged_seurat$groups <- ifelse(merged_seurat$samples == \"N01\", \"Normal\", \"Cancer\")\np1a <- DimPlot(merged_seurat, \n               reduction = \"umap.unintegrated\",\n               group.by = \"groups\")\np2a <- DimPlot(merged_seurat, \n               reduction = \"umap.unintegrated\",\n               split.by = \"groups\")\nplot_grid(p1a, p2a, \n          ncol = 1, labels = \"AUTO\")\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-10-2.png){width=1440}\n:::\n:::\n\n\n## 整合\n\n这里我们用Harmony整合算法。\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-11_25080e948d9c7b2cfc82212d88fd5e53'}\n\n```{.r .cell-code}\n# 整合，比较耗时间，进度条会一直显示0%直至运算完成\nseurat_integrated <- IntegrateLayers(object = merged_seurat,\n                                     method = HarmonyIntegration,\n                                     assay = \"SCT\", # Integrating SCTransformed data\n                                     orig.reduction = \"pca\",\n                                     verbose = FALSE); beep()\n\n\n# 整合后合并RNA layer\nseurat_integrated[[\"RNA\"]] <- JoinLayers(seurat_integrated[[\"RNA\"]])\n\n# 查看整合后的降维信息\nnames(seurat_integrated@reductions)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"pca\"               \"umap.unintegrated\" \"harmony\"          \n```\n:::\n:::\n\n\n## **整合后检验细胞分群情况**\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-12_9d5c5314f37f459ebce29e3c66f7478f'}\n\n```{.r .cell-code}\nset.seed(123456)\n# Run UMAP\nseurat_integrated <- RunUMAP(seurat_integrated, \n                             dims = 1:40,\n                             reduction = \"harmony\", # 更改降维来源为整合后的\"harmony\"\n                             reduction.name = \"umap.integrated\"); beep()\nnames(seurat_integrated@reductions)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"pca\"               \"umap.unintegrated\" \"harmony\"          \n[4] \"umap.integrated\"  \n```\n:::\n\n```{.r .cell-code}\n# 分群\nseurat_integrated <- FindNeighbors(seurat_integrated, \n                                   dims = 1:40, \n                                   reduction = \"harmony\") #更改降维来源为\"harmony\"\nseurat_integrated <- FindClusters(seurat_integrated, \n                                  cluster.name = \"integrated_clusters\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nModularity Optimizer version 1.3.0 by Ludo Waltman and Nees Jan van Eck\n\nNumber of nodes: 48584\nNumber of edges: 2161498\n\nRunning Louvain algorithm...\nMaximum modularity in 10 random starts: 0.9121\nNumber of communities: 24\nElapsed time: 8 seconds\n```\n:::\n\n```{.r .cell-code}\ncolnames(seurat_integrated@meta.data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"orig.ident\"            \"nCount_RNA\"            \"nFeature_RNA\"         \n [4] \"samples\"               \"log10GenesPerUMI\"      \"mitoRatio\"            \n [7] \"cells\"                 \"nCount_SCT\"            \"nFeature_SCT\"         \n[10] \"S.Score\"               \"G2M.Score\"             \"Phase\"                \n[13] \"mitoFr\"                \"unintegrated_clusters\" \"seurat_clusters\"      \n[16] \"groups\"                \"integrated_clusters\"  \n```\n:::\n\n```{.r .cell-code}\n# Plot UMAP                             \np3 <- DimPlot(seurat_integrated, \n              reduction = \"umap.integrated\", \n              group.by = \"samples\")\np4 <- DimPlot(seurat_integrated, \n              reduction = \"umap.integrated\", \n              split.by = \"samples\")\nplot_grid(p1, p3, p2, p4, \n          ncol = 1, \n          labels = c(\"Before Harmony\", \"After Harmony\", \n                     \"Before Harmony\", \"After Harmony\"))\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-12-1.png){width=960}\n:::\n\n```{.r .cell-code}\n# 保存\nsaveRDS(seurat_integrated, \n        file = \"output/sc_supplementary/GSE150430_seurat_integrated.RDS\"); beep()\n```\n:::\n\n\n------------------------------------------------------------------------\n\n# 聚类\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-13_bf15c88dc84c6814cacd36402d7d5465'}\n\n```{.r .cell-code}\nrm(list = ls())\ngc()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             used   (Mb) gc trigger    (Mb) limit (Mb)   max used    (Mb)\nNcells    8422866  449.9   15695064   838.3         NA   15695064   838.3\nVcells 1189105980 9072.2 3232710770 24663.7     102400 3232709930 24663.7\n```\n:::\n\n```{.r .cell-code}\nseurat_integrated <- readRDS(\"output/sc_supplementary/GSE150430_seurat_integrated.RDS\")\n```\n:::\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-14_eb30832d969469850494a341cb586022'}\n\n```{.r .cell-code}\n# Determine the clusters for various resolutions                                \nseurat_integrated <- FindClusters(seurat_integrated,\n                                  resolution = c(0.01, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.8, 1),\n                                  verbose = F); beep()\n# Explore resolutions\nhead(seurat_integrated@meta.data, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                       orig.ident nCount_RNA nFeature_RNA samples\nN01_CAGAATCAGTAATCCC.1        N01   3470.970         4173     N01\nN01_TGCGGGTAGTACGTAA.1        N01   3155.725         2994     N01\nN01_AAACCTGAGGGTTTCT.1        N01   2347.034         1946     N01\nN01_AAACCTGAGTTCCACA.1        N01   2362.495         1993     N01\nN01_AAACCTGGTTCTCATT.1        N01   2130.465         1459     N01\n                       log10GenesPerUMI   mitoRatio                  cells\nN01_CAGAATCAGTAATCCC.1        1.0225953 0.008644269 N01_CAGAATCAGTAATCCC.1\nN01_TGCGGGTAGTACGTAA.1        0.9934705 0.009895666 N01_TGCGGGTAGTACGTAA.1\nN01_AAACCTGAGGGTTTCT.1        0.9758564 0.015183419 N01_AAACCTGAGGGTTTCT.1\nN01_AAACCTGAGTTCCACA.1        0.9781039 0.014965958 N01_AAACCTGAGTTCCACA.1\nN01_AAACCTGGTTCTCATT.1        0.9506023 0.017437508 N01_AAACCTGGTTCTCATT.1\n                       nCount_SCT nFeature_SCT     S.Score    G2M.Score Phase\nN01_CAGAATCAGTAATCCC.1       1840         1674 -0.05179250 -0.070444626    G1\nN01_TGCGGGTAGTACGTAA.1       2840         2604 -0.04341940 -0.074302336    G1\nN01_AAACCTGAGGGTTTCT.1       2443         1931 -0.02396942 -0.007239586    G1\nN01_AAACCTGAGTTCCACA.1       2488         1972 -0.01294260 -0.021167805    G1\nN01_AAACCTGGTTCTCATT.1       2104         1451 -0.05440456 -0.049531592    G1\n                            mitoFr unintegrated_clusters seurat_clusters groups\nN01_CAGAATCAGTAATCCC.1         Low                    20              20 Normal\nN01_TGCGGGTAGTACGTAA.1         Low                    32              20 Normal\nN01_AAACCTGAGGGTTTCT.1        High                     0               0 Normal\nN01_AAACCTGAGTTCCACA.1 Medium high                     1               3 Normal\nN01_AAACCTGGTTCTCATT.1        High                     1               8 Normal\n                       integrated_clusters SCT_snn_res.0.01 SCT_snn_res.0.05\nN01_CAGAATCAGTAATCCC.1                  18                2                2\nN01_TGCGGGTAGTACGTAA.1                  18                2                2\nN01_AAACCTGAGGGTTTCT.1                   0                1                1\nN01_AAACCTGAGTTCCACA.1                   0                1                1\nN01_AAACCTGGTTCTCATT.1                   7                1                1\n                       SCT_snn_res.0.1 SCT_snn_res.0.2 SCT_snn_res.0.3\nN01_CAGAATCAGTAATCCC.1               2               2               1\nN01_TGCGGGTAGTACGTAA.1               2               2               1\nN01_AAACCTGAGGGTTTCT.1               0               0               0\nN01_AAACCTGAGTTCCACA.1               0               0               0\nN01_AAACCTGGTTCTCATT.1               0               0               0\n                       SCT_snn_res.0.4 SCT_snn_res.0.5 SCT_snn_res.0.8\nN01_CAGAATCAGTAATCCC.1               1              15              18\nN01_TGCGGGTAGTACGTAA.1               1              15              18\nN01_AAACCTGAGGGTTTCT.1               0               0               0\nN01_AAACCTGAGTTCCACA.1               0               0               0\nN01_AAACCTGGTTCTCATT.1               0               8               7\n                       SCT_snn_res.1\nN01_CAGAATCAGTAATCCC.1            20\nN01_TGCGGGTAGTACGTAA.1            20\nN01_AAACCTGAGGGTTTCT.1             0\nN01_AAACCTGAGTTCCACA.1             3\nN01_AAACCTGGTTCTCATT.1             8\n```\n:::\n\n```{.r .cell-code}\n# 查看各个分辨率下的细胞分群情况\nselect(seurat_integrated@meta.data, starts_with(match = \"SCT_snn_res.\")) %>%  \n  lapply(levels)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$SCT_snn_res.0.01\n[1] \"0\" \"1\" \"2\" \"3\" \"4\" \"5\"\n\n$SCT_snn_res.0.05\n [1] \"0\"  \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\"\n\n$SCT_snn_res.0.1\n [1] \"0\"  \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" \"12\"\n\n$SCT_snn_res.0.2\n [1] \"0\"  \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" \"12\"\n\n$SCT_snn_res.0.3\n [1] \"0\"  \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" \"12\" \"13\" \"14\"\n[16] \"15\" \"16\"\n\n$SCT_snn_res.0.4\n [1] \"0\"  \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" \"12\" \"13\" \"14\"\n[16] \"15\" \"16\" \"17\"\n\n$SCT_snn_res.0.5\n [1] \"0\"  \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" \"12\" \"13\" \"14\"\n[16] \"15\" \"16\" \"17\" \"18\" \"19\" \"20\"\n\n$SCT_snn_res.0.8\n [1] \"0\"  \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" \"12\" \"13\" \"14\"\n[16] \"15\" \"16\" \"17\" \"18\" \"19\" \"20\" \"21\" \"22\" \"23\"\n\n$SCT_snn_res.1\n [1] \"0\"  \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" \"12\" \"13\" \"14\"\n[16] \"15\" \"16\" \"17\" \"18\" \"19\" \"20\" \"21\" \"22\" \"23\" \"24\" \"25\"\n```\n:::\n:::\n\n\n绘制聚类树展示不同分辨率下的细胞分群情况及相互关系\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-15_3631aeb310c1201973eedb685229f643'}\n\n```{.r .cell-code}\ntree <- clustree(seurat_integrated@meta.data, \n                 prefix = \"SCT_snn_res.\")#指定包含聚类信息的列\ntree\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n通常情况下，为了决定合适的聚类分辨率，可使用以下两种策略：\n\n1.  选择透明箭头出现较少的分辨率聚类结果\n\n2.  基于marker基因表达选择有生物学意义的分辨率聚类结果\n\n接下来分析，按照分辨率为0.5进行\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-16_6dd027a0c36c02634f557bf6940979ef'}\n\n```{.r .cell-code}\nIdents(seurat_integrated) <- \"SCT_snn_res.0.5\"\n```\n:::\n\n\n聚类可视化\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-17_9af1c2a0dbe4643385122ced9d9dbdb1'}\n\n```{.r .cell-code}\n# Plot the UMAP\nDimPlot(seurat_integrated,\n        reduction = \"umap.integrated\",\n        label = FALSE)\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n# **细胞分群质量评估**\n\n## **分析样本类型是否影响细胞分群**\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-18_3865a3324a65699a58f14130d11a50dc'}\n\n```{.r .cell-code}\n# 先简单查看不同cluster的细胞数\ntable(seurat_integrated@active.ident)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n    0     1     2     3     4     5     6     7     8     9    10    11    12 \n10830  5756  5526  5321  4161  3765  2388  2365  1952  1478   986   792   759 \n   13    14    15    16    17    18    19    20 \n  707   398   388   232   214   198   189   179 \n```\n:::\n\n```{.r .cell-code}\n# 查看不同样本类型中的细胞分群情况\nDimPlot(seurat_integrated, \n        reduction = \"umap.integrated\",\n        label = TRUE, \n        split.by = \"groups\") + \n  NoLegend()\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n## **分析细胞周期是否影响细胞分群**\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-19_5cc8c540982056ed2d0a5bba58b888f2'}\n\n```{.r .cell-code}\n# Explore whether clusters segregate by cell cycle phase\nDimPlot(seurat_integrated,\n        reduction = \"umap.integrated\",\n        label = TRUE, \n        split.by = \"Phase\") + \n  NoLegend()\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n## **分析其他非期望变异来源是否会影响细胞分群**\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-20_41b63448504adcd6e7c7792d471abeba'}\n\n```{.r .cell-code}\n# Determine metrics to plot present in seurat_clustered@meta.data\nmetrics <-  c(\"nCount_RNA\", \"nFeature_RNA\", \"S.Score\", \"G2M.Score\", \"mitoRatio\")\n\nFeaturePlot(seurat_integrated, \n            reduction = \"umap.integrated\", \n            features = metrics,\n            pt.size = 0.4, \n            order = TRUE,\n            min.cutoff = 'q10', \n            label = TRUE)\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n\n\n## 保存\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-21_7034a4d652c5904983cecc81471a2be7'}\n\n```{.r .cell-code}\nsaveRDS(seurat_integrated, \n        file = \"output/sc_supplementary/GSE150430_seurat_clustered.RDS\"); beep()\n```\n:::\n\n\n------------------------------------------------------------------------\n\n# 细胞注释\n\n## 探索cell type markers的表达\n\n这里的marker基因选用[此前章节](/single_cell/sc_supplementary/universal_marker.qmd)中的细胞初步分群通用marker。\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-22_fbce6e0461732095a56b533170ee9186'}\n\n```{.r .cell-code}\nrm(list = ls())\ngc()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             used   (Mb) gc trigger    (Mb) limit (Mb)   max used    (Mb)\nNcells    8508819  454.5   15695064   838.3         NA   15695064   838.3\nVcells 1006102702 7676.0 3232710770 24663.7     102400 3232709930 24663.7\n```\n:::\n\n```{.r .cell-code}\nseurat_clustered <- readRDS(\"output/sc_supplementary/GSE150430_seurat_clustered.RDS\")\n\ngenes_to_check = c('PTPRC', \n                   \"CD163\",\"AIF1\", \n                   'CD3D', 'CD3E', 'CD4', 'CD8A', \n                   'CD19', 'CD79A', 'MS4A1', \"SDC1\", \"CD27\", \"CD38\",\n                   'IGHG1', 'MZB1', 'SDC1', \"JCHAIN\", \n                   'CD68', 'CD163', 'CD14', \n                   'S100A9', 'S100A8', 'MMP19',\n                   'C1QA',  'C1QB', \n                   'TPSAB1', 'TPSB2', \n                   'KLRB1', \"KLRD1\", 'NCR1', \"GNLY\", \"NKG7\", \n                   'FGF7', 'MME', 'ACTA2', \"COL3A1\", \n                   'PECAM1', 'VWF', \n                   'EPCAM', 'KRT19', 'PROM1', 'ALDH1A1') |> unique()\n\nDotPlot(seurat_clustered, \n        features = genes_to_check) + \n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-22-1.png){width=768}\n:::\n:::\n\n\n## 手动注释\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-23_db21479619931683b561ffe594f21bfd'}\n\n```{.r .cell-code}\nseurat_clustered <- RenameIdents(seurat_clustered, \n                                 \"0\" = \"B cells\",\n                                 \"1\" = \"T cells\",\n                                 \"2\" = \"Epithelial/cancer\",\n                                 \"3\" = \"T cells\",\n                                 \"4\" = \"T cells\",\n                                 \"5\" = \"Macrophages\",\n                                 \"6\" = \"T cells\",\n                                 \"7\" = \"Plasma cells\",\n                                 \"8\" = \"B cells\",\n                                 \"9\" = \"Epithelial/cancer\",\n                                 \"10\" = \"B cells\",\n                                 \"11\" = \"B cells\",\n                                 \"12\" = \"Unknown\",\n                                 \"13\" = \"NK cells\",\n                                 \"14\" = \"Unknown\",\n                                 \"15\" = \"Epithelial/cancer\",\n                                 \"16\" = \"Myeloid (unspecific)\",\n                                 \"17\" = \"Epithelial/cancer\",\n                                 \"18\" = \"Epithelial/cancer\",\n                                 \"19\" = \"Epithelial/cancer\",\n                                 \"20\" = \"B cells\")\ntable(Idents(seurat_clustered))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n             B cells              T cells    Epithelial/cancer \n               14739                17626                 7993 \n         Macrophages         Plasma cells              Unknown \n                3765                 2365                 1157 \n            NK cells Myeloid (unspecific) \n                 707                  232 \n```\n:::\n\n```{.r .cell-code}\n# Plot the UMAP\nDimPlot(seurat_clustered, \n        reduction = \"umap.integrated\", \n        label = T)\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n在注释好的数据中再次检查marker基因的表达情况：\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-24_bb9d05608412b8da723fa06c6d30331f'}\n\n```{.r .cell-code}\nDotPlot(seurat_clustered, \n        features = genes_to_check) + \n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 30,vjust = 0.85,hjust = 0.75)\n) \n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-24-1.png){width=768}\n:::\n:::\n\n\n因为接下来我们要提取髓系细胞进一步分析，所以通过几种可视化方法检查一下髓系细胞通用marker（CD163和AIF1）的表达情况：\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-25_32fabb2551b2041650ed7cb583709d06'}\n\n```{.r .cell-code}\nRidgePlot(seurat_clustered, features = c(\"CD163\", \"AIF1\"), ncol = 1)\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-26_c5a9b466492dbdf451984c631e01ac9c'}\n\n```{.r .cell-code}\nVlnPlot(seurat_clustered, features = c(\"CD163\", \"AIF1\"))\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-27_4913d8903e3592fae61e5ae0750c0569'}\n\n```{.r .cell-code}\nFeaturePlot(seurat_clustered, features = c(\"CD163\", \"AIF1\"), label = T)\n```\n\n::: {.cell-output-display}\n![](integrated_analysis_multiple_single_cell_datasets_1_files/figure-html/unnamed-chunk-27-1.png){width=768}\n:::\n:::\n\n\n保存\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-28_90bcf77b3f3a31701e487f2024e15dd0'}\n\n```{.r .cell-code}\nsaveRDS(seurat_clustered, \n        file = \"output/sc_supplementary/GSE150430_seurat_annotated.RDS\"); beep()\n```\n:::\n\n\n# 提取髓系细胞\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-29_b4011549ef17aaad537c77099573618a'}\n\n```{.r .cell-code}\nsub_seurat <- subset(seurat_clustered, \n                     idents = c(\"Macrophages\", \n                                \"Myeloid (unspecific)\"))\nsub_seurat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn object of class Seurat \n46357 features across 3997 samples within 2 assays \nActive assay: SCT (21637 features, 3000 variable features)\n 3 layers present: counts, data, scale.data\n 1 other assay present: RNA\n 4 dimensional reductions calculated: pca, umap.unintegrated, harmony, umap.integrated\n```\n:::\n\n```{.r .cell-code}\ncolnames(sub_seurat@meta.data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"orig.ident\"            \"nCount_RNA\"            \"nFeature_RNA\"         \n [4] \"samples\"               \"log10GenesPerUMI\"      \"mitoRatio\"            \n [7] \"cells\"                 \"nCount_SCT\"            \"nFeature_SCT\"         \n[10] \"S.Score\"               \"G2M.Score\"             \"Phase\"                \n[13] \"mitoFr\"                \"unintegrated_clusters\" \"seurat_clusters\"      \n[16] \"groups\"                \"integrated_clusters\"   \"SCT_snn_res.0.01\"     \n[19] \"SCT_snn_res.0.05\"      \"SCT_snn_res.0.1\"       \"SCT_snn_res.0.2\"      \n[22] \"SCT_snn_res.0.3\"       \"SCT_snn_res.0.4\"       \"SCT_snn_res.0.5\"      \n[25] \"SCT_snn_res.0.8\"       \"SCT_snn_res.1\"        \n```\n:::\n\n```{.r .cell-code}\nmyeloid_seurat <- CreateSeuratObject(counts = sub_seurat@assays[[\"RNA\"]],\n                                     meta.data = sub_seurat@meta.data[,c(1:7, 10:13, 16)])\nmyeloid_seurat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn object of class Seurat \n24720 features across 3997 samples within 1 assay \nActive assay: RNA (24720 features, 0 variable features)\n 1 layer present: counts\n```\n:::\n:::\n\n\n::: callout-warning\n可以看到在重新创建Seurat之后，默认的“RNA” assay之中只有一个layer。为了后面执行`SCTransform`及整合，**这里需要将其按照样本拆分成不同的layers**。\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-30_af8e0dc4fd8dd7b73beba1db7fc21bbd'}\n\n```{.r .cell-code}\nmyeloid_seurat[[\"RNA\"]] <- split(myeloid_seurat[[\"RNA\"]], \n                                 f = myeloid_seurat$samples)\nmyeloid_seurat\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn object of class Seurat \n24720 features across 3997 samples within 1 assay \nActive assay: RNA (24720 features, 0 variable features)\n 16 layers present: counts.N01, counts.P01, counts.P02, counts.P03, counts.P04, counts.P05, counts.P06, counts.P07, counts.P08, counts.P09, counts.P10, counts.P11, counts.P12, counts.P13, counts.P14, counts.P15\n```\n:::\n:::\n\n:::\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-31_f6174f0498967057c31a566e67b3e594'}\n\n```{.r .cell-code}\n# 补充原细胞注释信息\nmyeloid_seurat$old_clusters <- Idents(sub_seurat)\ntable(myeloid_seurat$old_clusters)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n         Macrophages Myeloid (unspecific) \n                3765                  232 \n```\n:::\n\n```{.r .cell-code}\n# 保存\nsaveRDS(myeloid_seurat, file = \"output/sc_supplementary/GSE150430_myeloid_seurat.RDS\")\n```\n:::\n\n\n::: {.callout-tip collapse=\"true\"}\n###### 如何提取并处理目标细胞亚群\n\nAfter we have completed the scRNA-seq workflow and identified the various cell types present in our samples, we might decide that for a particular cell type, we would like to identify subtypes. For example, if we have a large cluster of **CD4+ Helper T cells**, we may want to identify subsets of **Th1, Th2, Th17, Th9, and Tfh cells**. To subset the dataset, Seurat has a handy `subset()`function（见[Seurat常用函数清单](/single_cell/seurat/seurat_command_list.qmd#sec-subset_seurat)）.\n\nTo perform the subclustering, there are a couple of different methods you could try. The easiest would be to run the `FindNeighbors()` and `FindClusters()` on the subsetted cells, adjusting the resolution to give you the optimal clustering. However, with this approach **you are not redefining the most variable genes** used to find clusters, so it might not work if the genes delineating these subsets are not those driving any of the top PCs used for the clustering.\n\nAlternatively, we could **start over with the raw counts** for this subset of cells and run **`SCTransform()`**to determine the greatest sources of variation present. **This would allow us to focus our clustering on the most variant genes present among our subset of cells**. Hopefully, the most variant genes are those driving the various desired subsets (e.g. Th1, Th2, Th17, Th9, and Tfh cells). If **integration** is necessary, then this step would still need to be performed.\n\nSince subsetting the dataset can result in a much smaller number of cells, it is important to consider the total number of cells you are looking to cluster and some of the parameters that might be affected by the small numbers. For example, if integrating, there is a ‘K’ number of cells used for determining the neighborhoods for identifying and filtering anchors. Therefore, if your integration isn’t very good for a small dataset, you might want to consider **lowering the ‘K’ parameter (k.filter、k.weight)** in`IntegrateLayers`. However, if ‘K’ is too small, it could also lead to poor integration.\n\n（来自：[*Subclustering scRNA-seq datasets*](https://hbctraining.github.io/scRNA-seq_online/lessons/seurat_subclustering.html)）\n:::\n\n下一节，针对髓系细胞进一步分群。\n\n------------------------------------------------------------------------\n\n::: {.callout-note collapse=\"true\" icon=\"false\"}\n## Session Info\n\n\n::: {.cell hash='integrated_analysis_multiple_single_cell_datasets_1_cache/html/unnamed-chunk-32_03790cfe1a3993dbb0bf41bacca6698a'}\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.2 (2023-10-31)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Sonoma 14.3\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Asia/Shanghai\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] clustree_0.5.1     ggraph_2.1.0       dplyr_1.1.4        cowplot_1.1.2     \n[5] beepr_1.3          ggplot2_3.4.4      Seurat_5.0.1       SeuratObject_5.0.1\n[9] sp_2.1-2          \n\nloaded via a namespace (and not attached):\n  [1] RcppAnnoy_0.0.21            splines_4.3.2              \n  [3] later_1.3.2                 bitops_1.0-7               \n  [5] tibble_3.2.1                polyclip_1.10-6            \n  [7] fastDummies_1.7.3           lifecycle_1.0.4            \n  [9] globals_0.16.2              lattice_0.22-5             \n [11] MASS_7.3-60.0.1             backports_1.4.1            \n [13] magrittr_2.0.3              plotly_4.10.4              \n [15] rmarkdown_2.25              yaml_2.3.8                 \n [17] httpuv_1.6.13               glmGamPoi_1.14.0           \n [19] sctransform_0.4.1           spam_2.10-0                \n [21] spatstat.sparse_3.0-3       reticulate_1.34.0          \n [23] pbapply_1.7-2               RColorBrewer_1.1-3         \n [25] abind_1.4-5                 zlibbioc_1.48.0            \n [27] audio_0.1-11                Rtsne_0.17                 \n [29] GenomicRanges_1.54.1        purrr_1.0.2                \n [31] BiocGenerics_0.48.1         RCurl_1.98-1.14            \n [33] tweenr_2.0.2                GenomeInfoDbData_1.2.11    \n [35] IRanges_2.36.0              S4Vectors_0.40.2           \n [37] ggrepel_0.9.5               irlba_2.3.5.1              \n [39] listenv_0.9.0               spatstat.utils_3.0-4       \n [41] goftest_1.2-3               RSpectra_0.16-1            \n [43] spatstat.random_3.2-2       fitdistrplus_1.1-11        \n [45] parallelly_1.36.0           DelayedMatrixStats_1.24.0  \n [47] leiden_0.4.3.1              codetools_0.2-19           \n [49] DelayedArray_0.28.0         ggforce_0.4.1              \n [51] tidyselect_1.2.0            farver_2.1.1               \n [53] viridis_0.6.4               matrixStats_1.2.0          \n [55] stats4_4.3.2                spatstat.explore_3.2-5     \n [57] jsonlite_1.8.8              ellipsis_0.3.2             \n [59] tidygraph_1.3.0             progressr_0.14.0           \n [61] ggridges_0.5.5              survival_3.5-7             \n [63] tools_4.3.2                 ica_1.0-3                  \n [65] Rcpp_1.0.12                 glue_1.7.0                 \n [67] gridExtra_2.3               SparseArray_1.2.3          \n [69] xfun_0.41                   mgcv_1.9-1                 \n [71] MatrixGenerics_1.14.0       GenomeInfoDb_1.38.5        \n [73] withr_3.0.0                 fastmap_1.1.1              \n [75] fansi_1.0.6                 digest_0.6.34              \n [77] R6_2.5.1                    mime_0.12                  \n [79] colorspace_2.1-0            scattermore_1.2            \n [81] tensor_1.5                  spatstat.data_3.0-4        \n [83] RhpcBLASctl_0.23-42         utf8_1.2.4                 \n [85] tidyr_1.3.0                 generics_0.1.3             \n [87] data.table_1.14.10          graphlayouts_1.0.2         \n [89] httr_1.4.7                  htmlwidgets_1.6.4          \n [91] S4Arrays_1.2.0              uwot_0.1.16                \n [93] pkgconfig_2.0.3             gtable_0.3.4               \n [95] lmtest_0.9-40               XVector_0.42.0             \n [97] htmltools_0.5.7             dotCall64_1.1-1            \n [99] scales_1.3.0                Biobase_2.62.0             \n[101] png_0.1-8                   harmony_1.2.0              \n[103] knitr_1.45                  rstudioapi_0.15.0          \n[105] reshape2_1.4.4              checkmate_2.3.1            \n[107] nlme_3.1-164                zoo_1.8-12                 \n[109] stringr_1.5.1               KernSmooth_2.23-22         \n[111] vipor_0.4.7                 parallel_4.3.2             \n[113] miniUI_0.1.1.1              ggrastr_1.0.2              \n[115] pillar_1.9.0                grid_4.3.2                 \n[117] vctrs_0.6.5                 RANN_2.6.1                 \n[119] promises_1.2.1              xtable_1.8-4               \n[121] cluster_2.1.6               beeswarm_0.4.0             \n[123] evaluate_0.23               cli_3.6.2                  \n[125] compiler_4.3.2              rlang_1.1.3                \n[127] crayon_1.5.2                future.apply_1.11.1        \n[129] labeling_0.4.3              ggbeeswarm_0.7.2           \n[131] plyr_1.8.9                  stringi_1.8.3              \n[133] viridisLite_0.4.2           deldir_2.0-2               \n[135] munsell_0.5.0               lazyeval_0.2.2             \n[137] spatstat.geom_3.2-7         Matrix_1.6-5               \n[139] RcppHNSW_0.5.0              patchwork_1.2.0            \n[141] sparseMatrixStats_1.14.0    future_1.33.1              \n[143] shiny_1.8.0                 SummarizedExperiment_1.32.0\n[145] ROCR_1.0-11                 igraph_1.6.0               \n```\n:::\n:::\n\n:::\n\n# References {.unnumbered}\n\n::: {#refs}\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{
  "hash": "2a8e028013fa823a58d2eea64c2bd9ca",
  "result": {
    "markdown": "# Seurat常用函数清单 {#sec-seurat_command_list}\n\n> 原文：[*Seurat Command List*](https://satijalab.org/seurat/articles/essential_commands)\n>\n> 原文发布日期：2023年10月31日\n\n为了演示各函数的效果，这里的案例数据选取了在 @sec-seurat_cell_clustering_official_tutorial 中用到的包含了2700个细胞的外周血单核细胞数据（`pbmc`）。数据可在[此链接](https://cf.10xgenomics.com/samples/cell/pbmc3k/pbmc3k_filtered_gene_bc_matrices.tar.gz)下载。\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-1_217afc1ad7dd2191ba982031b32d7462'}\n\n```{.r .cell-code}\nlibrary(Seurat)\n\n# 读取PBMC数据集\ncounts <- Read10X(data.dir = \"data/seurat_official/filtered_gene_bc_matrices/hg19\")\n# Initialize the Seurat object with the raw (non-normalized data).\npbmc <- CreateSeuratObject(counts = counts, \n                           project = \"pbmc3k\", \n                           min.cells = 3, \n                           min.features = 200)\npbmc\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn object of class Seurat \n13714 features across 2700 samples within 1 assay \nActive assay: RNA (13714 features, 0 variable features)\n 1 layer present: counts\n```\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## 标准Seurat流程基本函数\n\n见 @sec-seurat_cell_clustering_official_tutorial 。\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-2_f972ba04b4f3c06120e3bd4c32e7c358'}\n\n```{.r .cell-code}\npbmc <- NormalizeData(object = pbmc)\npbmc <- FindVariableFeatures(object = pbmc)\npbmc <- ScaleData(object = pbmc)\npbmc <- RunPCA(object = pbmc)\npbmc <- FindNeighbors(object = pbmc, dims = 1:30)\npbmc <- FindClusters(object = pbmc)\npbmc <- RunUMAP(object = pbmc, dims = 1:30)\nDimPlot(object = pbmc, reduction = \"umap\")\n```\n:::\n\n\n### 采用`SCtransform`标准化时的流程：\n\n见 @sec-sctransform 。\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-3_94829bdebb7cdd258023c347f0d18034'}\n\n```{.r .cell-code}\npbmc <- SCTransform(object = pbmc, verbose = F)\npbmc <- RunPCA(object = pbmc, verbose = F)\npbmc <- FindNeighbors(object = pbmc, dims = 1:30, verbose = F)\npbmc <- FindClusters(object = pbmc, verbose = F)\npbmc <- RunUMAP(object = pbmc, dims = 1:30, verbose = F)\nDimPlot(object = pbmc, reduction = \"umap\")\n```\n\n::: {.cell-output-display}\n![](seurat_command_list_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n或者通过管道函数：\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-4_692af08eadcd5aeeef7930c94f4cb34e'}\n\n```{.r .cell-code}\npbmc <- SCTransform(pbmc) %>%\n    RunPCA() %>%\n    FindNeighbors(dims = 1:30) %>%\n    FindClusters() %>%\n    RunUMAP(dims = 1:30)\n```\n:::\n\n\n------------------------------------------------------------------------\n\n## 提取`Seurat`对象内的各数据\n\n### 获取细胞、基因、assays、layers名称\n\n#### 获取细胞的barcode：\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-5_df7d5228c2b22455ec7fffe44c97c73e'}\n\n```{.r .cell-code}\ncolnames(pbmc)[1:10]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"AAACATACAACCAC-1\" \"AAACATTGAGCTAC-1\" \"AAACATTGATCAGC-1\" \"AAACCGTGCTTCCG-1\"\n [5] \"AAACCGTGTATGCG-1\" \"AAACGCACTGGTAC-1\" \"AAACGCTGACCAGT-1\" \"AAACGCTGGTTCTT-1\"\n [9] \"AAACGCTGTAGCCA-1\" \"AAACGCTGTTTCTG-1\"\n```\n:::\n\n```{.r .cell-code}\nCells(pbmc)[1:10] # 效果同上\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"AAACATACAACCAC-1\" \"AAACATTGAGCTAC-1\" \"AAACATTGATCAGC-1\" \"AAACCGTGCTTCCG-1\"\n [5] \"AAACCGTGTATGCG-1\" \"AAACGCACTGGTAC-1\" \"AAACGCTGACCAGT-1\" \"AAACGCTGGTTCTT-1\"\n [9] \"AAACGCTGTAGCCA-1\" \"AAACGCTGTTTCTG-1\"\n```\n:::\n:::\n\n\n#### 获取基因（feature）名。\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-6_f28768d402e068f1b8ad9436b352014e'}\n\n```{.r .cell-code}\nFeatures(pbmc)[1:10]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"AL627309.1\"    \"RP11-206L10.2\" \"LINC00115\"     \"NOC2L\"        \n [5] \"KLHL17\"        \"PLEKHN1\"       \"HES4\"          \"ISG15\"        \n [9] \"AGRN\"          \"C1orf159\"     \n```\n:::\n\n```{.r .cell-code}\nrownames(pbmc)[1:10] # 同上\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"AL627309.1\"    \"RP11-206L10.2\" \"LINC00115\"     \"NOC2L\"        \n [5] \"KLHL17\"        \"PLEKHN1\"       \"HES4\"          \"ISG15\"        \n [9] \"AGRN\"          \"C1orf159\"     \n```\n:::\n:::\n\n\n可以指定提取哪一个assay下的基因名，如果未指定，则提取默认assay内的基因名。这里的pbmc数据经过了**`SCTransform`，**所以有两个assay，默认的归一化之后的“SCT”assay，另一个是原始的“RNA”assay。\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-7_7cf1b431be77e279dd9589ceef74c4a8'}\n\n```{.r .cell-code}\n# 获取“SCT” assay下的基因名\nFeatures(pbmc[[\"SCT\"]])[1:10]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"AL627309.1\"    \"RP11-206L10.2\" \"LINC00115\"     \"NOC2L\"        \n [5] \"KLHL17\"        \"PLEKHN1\"       \"HES4\"          \"ISG15\"        \n [9] \"AGRN\"          \"C1orf159\"     \n```\n:::\n\n```{.r .cell-code}\n# 获取“RNA” assay下的基因名\nFeatures(pbmc[[\"RNA\"]])[1:10]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"AL627309.1\"    \"AP006222.2\"    \"RP11-206L10.2\" \"RP11-206L10.9\"\n [5] \"LINC00115\"     \"NOC2L\"         \"KLHL17\"        \"PLEKHN1\"      \n [9] \"RP11-54O7.17\"  \"HES4\"         \n```\n:::\n\n```{.r .cell-code}\n# 或\nFeatures(pbmc, assay = \"RNA\")[1:10]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"AL627309.1\"    \"AP006222.2\"    \"RP11-206L10.2\" \"RP11-206L10.9\"\n [5] \"LINC00115\"     \"NOC2L\"         \"KLHL17\"        \"PLEKHN1\"      \n [9] \"RP11-54O7.17\"  \"HES4\"         \n```\n:::\n:::\n\n\n也可以通过添加`layer`参数，提取指定layer下的基因名：\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-8_e14e41f143213edc0d00224c72156178'}\n\n```{.r .cell-code}\n# 提取“counts” layer下的基因名\nFeatures(pbmc, layer = \"counts\")[1:10]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"AL627309.1\"    \"RP11-206L10.2\" \"LINC00115\"     \"NOC2L\"        \n [5] \"KLHL17\"        \"PLEKHN1\"       \"HES4\"          \"ISG15\"        \n [9] \"AGRN\"          \"C1orf159\"     \n```\n:::\n\n```{.r .cell-code}\n# 提取\"scale.data\"的基因名\nFeatures(pbmc, layer = \"scale.data\")[1:10]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"NOC2L\"    \"HES4\"     \"ISG15\"    \"TNFRSF18\" \"TNFRSF4\"  \"CPSF3L\"  \n [7] \"MRPL20\"   \"ATAD3C\"   \"SSU72\"    \"MIB2\"    \n```\n:::\n:::\n\n\n#### 获取细胞和基因的数量：\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-9_610ec13b41435fb90a1b5c83f775d355'}\n\n```{.r .cell-code}\nncol(pbmc) # 细胞数量\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2700\n```\n:::\n\n```{.r .cell-code}\nnrow(pbmc) # 基因（feature）数量\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12572\n```\n:::\n:::\n\n\n#### 获取高变基因列表\n\n详见 @sec-highly_variable_features 。\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-10_7b088c185245ba8a1b1e185c5cc71f35'}\n\n```{.r .cell-code}\nVariableFeatures(pbmc)[1:10]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"S100A9\" \"GNLY\"   \"LYZ\"    \"S100A8\" \"NKG7\"   \"FTL\"    \"GZMB\"   \"IGLL5\" \n [9] \"FTH1\"   \"CCL5\"  \n```\n:::\n:::\n\n\n#### 列出layers\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-11_890fd2d20743d1e0e9ccb9e217948bd8'}\n\n```{.r .cell-code}\n# 列出所有的layers\nLayers(pbmc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"counts\"     \"data\"       \"scale.data\"\n```\n:::\n:::\n\n\n#### 获取/设定assay：\n\n列出所有的assay，如\"RNA\" assay、运行`SCTransform`之后的\"SCT\" assay。一个Seurat对象可以包括多个assay对象，但是在某个时刻，只有一个assay对象是默认激活的。\n\n实际应用场景见 @sec-findmarkers_function 。\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-12_434a2441beee1219cabc08b7a9aa099b'}\n\n```{.r .cell-code}\n# 列出所有的assay\nAssays(pbmc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"RNA\" \"SCT\"\n```\n:::\n\n```{.r .cell-code}\n# 获取目前的默认assay名称\nDefaultAssay(pbmc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"SCT\"\n```\n:::\n\n```{.r .cell-code}\n# 设定默认assay\nDefaultAssay(pbmc) <- \"RNA\"\nDefaultAssay(pbmc) <- \"SCT\"\n```\n:::\n\n\n#### 转换不同版本的Seurat对象：\n\n上面我们使用的pbmc对象使用V5版本的Seurat包创建的，可以通过如下命令查看：\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-13_fe1eecaef931e70c8839ba35898741aa'}\n\n```{.r .cell-code}\n# 查看Seurat对象是用哪个版本的Seurat包创建的\npbmc@version\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] '5.0.1'\n```\n:::\n:::\n\n\n这里我们导入在 @sec-Load_case_data 中用到的案例数据，这个Seurat对象是使用V4版本的`Seurat`包创建的。\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-14_ce427ca3ced55160906d34436231921f'}\n\n```{.r .cell-code}\nload(bzfile(\"data/scRNA-seq_online/additional_data/seurat_integrated.RData.bz2\"))\nseurat_integrated\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn object of class Seurat \n31130 features across 29629 samples within 3 assays \nActive assay: integrated (3000 features, 3000 variable features)\n 2 layers present: data, scale.data\n 2 other assays present: RNA, SCT\n 2 dimensional reductions calculated: pca, umap\n```\n:::\n\n```{.r .cell-code}\nseurat_integrated@version\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] '4.1.0'\n```\n:::\n:::\n\n\n![](images/截屏2024-01-15%2019.49.57.png)\n\n可以看到，这个seurat_integrated对象的“RNA” assay没有layers结构，是典型的V5版本之前的Seurat对象的结构。我们可以通过as()函数将V4或V3版本的“RNA” assay转换成V5版本的“RNA” assay：\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-15_77cb9f5115cf50858a70bc46037217dc'}\n\n```{.r .cell-code}\n# convert a v4 or v3 assay to a v5 assay\nseurat_integrated[[\"RNA5\"]] <- as(object = seurat_integrated[[\"RNA\"]], \n                                  Class = \"Assay5\")\nDefaultAssay(seurat_integrated) = \"RNA5\"\n```\n:::\n\n\n![](images/截屏2024-01-15%2019.54.40.png)\n\n转换后seurat_integrated\\[\\[\"RNA5\"\\]\\]里面是V5版的Seurat结构。如果不想要原来的“RNA” assay可以将其删除：\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-16_a461e659602d9db7e6a89601337c2cc8'}\n\n```{.r .cell-code}\nseurat_integrated[[\"RNA\"]] <- NULL\n```\n:::\n\n\n也可以将V5版本的“RNA” assay转换成V4或V3版本的“RNA” assay：\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-17_413b66079b92bcfacd458e7bd8a20a02'}\n\n```{.r .cell-code}\n# convert a v5 assay to a v4 or v3 assay\npbmc[[\"RNA3\"]] <- as(object = pbmc[[\"RNA\"]], Class = \"Assay\")\n```\n:::\n\n\n![](images/截屏2024-01-15%2020.01.30.png)\n\n### 获取细胞注释信息（cell identities）\n\n#### 查看cell identities：\n\n即**细胞的类型**，在Seurat对象中，细胞可能有好几种不同方法注释的类型，但是在某一时刻，只有一种细胞类型是默认激活的。\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-18_ef2356ab7a3add763984f5bbe139ae59'}\n\n```{.r .cell-code}\nIdents(pbmc)[1:5]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAAACATACAACCAC-1 AAACATTGAGCTAC-1 AAACATTGATCAGC-1 AAACCGTGCTTCCG-1 \n               4                2                0                5 \nAAACCGTGTATGCG-1 \n               6 \nLevels: 0 1 2 3 4 5 6 7 8 9 10 11 12\n```\n:::\n\n```{.r .cell-code}\ntable(Idents(pbmc))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  0   1   2   3   4   5   6   7   8   9  10  11  12 \n491 485 361 316 229 182 157 153 138 100  42  34  12 \n```\n:::\n\n```{.r .cell-code}\n# 查看目前cell identities的水平\nlevels(pbmc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"0\"  \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" \"11\" \"12\"\n```\n:::\n:::\n\n\n#### 设定细胞identities：\n\n实际应用场景见 @sec-findmarkers_function 。\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-19_8e1fab86ca57b78cd10775fe9048d2ed'}\n\n```{.r .cell-code}\n# 将meta.data中的\"seurat_clusters\"列设置为cell identities\nIdents(pbmc) <- \"seurat_clusters\"\n\n# 重命名细胞注释标签或重新排序细胞类型标签\nIdents(pbmc) <- factor(Idents(pbmc), \n                       levels = levels(pbmc),\n                       labels = c(\"pDC\", \"Mk\", \"DC\", \"CD14 Mono\", \"CD16 Mono\", \n                                  \"B Activated\", \"B\", \"CD8 T\", \"NK\", \"T activated\", \n                                  \"CD4 Naive T\", \"CD4 Memory T\", \"epi\"))\nIdents(pbmc) |> unique()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] CD16 Mono    DC           pDC          B Activated  B           \n [6] CD8 T        Mk           CD14 Mono    T activated  CD4 Naive T \n[11] CD4 Memory T NK           epi         \n13 Levels: pDC Mk DC CD14 Mono CD16 Mono B Activated B CD8 T NK ... epi\n```\n:::\n:::\n\n\n将目前的cell identities保存到meta.data新的一列中：\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-20_b6734e5b14c102fd0684d3d5e82a2d83'}\n\n```{.r .cell-code}\n# 将目前的cell identities储存到meta.data的\"old.ident\"列中\npbmc[[\"old.ident\"]] <- Idents(pbmc) \n```\n:::\n\n\n重命名某个cell identities：\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-21_cf24868eeda694fff77de6cd0db554ab'}\n\n```{.r .cell-code}\npbmc <- RenameIdents(pbmc, \n                     \"B\" = \"B cell\")\nIdents(pbmc) |> unique()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] CD16 Mono    DC           pDC          B Activated  B cell      \n [6] CD8 T        Mk           CD14 Mono    T activated  CD4 Naive T \n[11] CD4 Memory T NK           epi         \n13 Levels: B cell pDC Mk DC CD14 Mono CD16 Mono B Activated CD8 T ... epi\n```\n:::\n:::\n\n\n### 获取meta.data\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-22_7149756d0df88e88ddef6ada31e0bce2'}\n\n```{.r .cell-code}\n# View metadata data frame, stored in object@meta.data\npbmc@meta.data |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                 orig.ident nCount_RNA nFeature_RNA nCount_SCT nFeature_SCT\nAAACATACAACCAC-1     pbmc3k       2419          779       2275          769\nAAACATTGAGCTAC-1     pbmc3k       4903         1352       2597         1126\nAAACATTGATCAGC-1     pbmc3k       3147         1129       2469         1111\nAAACCGTGCTTCCG-1     pbmc3k       2639          960       2343          942\nAAACCGTGTATGCG-1     pbmc3k        980          521       1901          551\nAAACGCACTGGTAC-1     pbmc3k       2163          781       2148          767\n                 SCT_snn_res.0.8 seurat_clusters nCount_RNA3 nFeature_RNA3\nAAACATACAACCAC-1               4               4        2419           779\nAAACATTGAGCTAC-1               2               2        4903          1352\nAAACATTGATCAGC-1               0               0        3147          1129\nAAACCGTGCTTCCG-1               5               5        2639           960\nAAACCGTGTATGCG-1               6               6         980           521\nAAACGCACTGGTAC-1               0               0        2163           781\n                   old.ident\nAAACATACAACCAC-1   CD16 Mono\nAAACATTGAGCTAC-1          DC\nAAACATTGATCAGC-1         pDC\nAAACCGTGCTTCCG-1 B Activated\nAAACCGTGTATGCG-1           B\nAAACGCACTGGTAC-1         pDC\n```\n:::\n\n```{.r .cell-code}\n# 或\npbmc[[]] |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                 orig.ident nCount_RNA nFeature_RNA nCount_SCT nFeature_SCT\nAAACATACAACCAC-1     pbmc3k       2419          779       2275          769\nAAACATTGAGCTAC-1     pbmc3k       4903         1352       2597         1126\nAAACATTGATCAGC-1     pbmc3k       3147         1129       2469         1111\nAAACCGTGCTTCCG-1     pbmc3k       2639          960       2343          942\nAAACCGTGTATGCG-1     pbmc3k        980          521       1901          551\nAAACGCACTGGTAC-1     pbmc3k       2163          781       2148          767\n                 SCT_snn_res.0.8 seurat_clusters nCount_RNA3 nFeature_RNA3\nAAACATACAACCAC-1               4               4        2419           779\nAAACATTGAGCTAC-1               2               2        4903          1352\nAAACATTGATCAGC-1               0               0        3147          1129\nAAACCGTGCTTCCG-1               5               5        2639           960\nAAACCGTGTATGCG-1               6               6         980           521\nAAACGCACTGGTAC-1               0               0        2163           781\n                   old.ident\nAAACATACAACCAC-1   CD16 Mono\nAAACATTGAGCTAC-1          DC\nAAACATTGATCAGC-1         pDC\nAAACCGTGCTTCCG-1 B Activated\nAAACCGTGTATGCG-1           B\nAAACGCACTGGTAC-1         pDC\n```\n:::\n\n```{.r .cell-code}\n# 如果是展示前6行的话也可以直接这样写：\nhead(pbmc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                 orig.ident nCount_RNA nFeature_RNA nCount_SCT nFeature_SCT\nAAACATACAACCAC-1     pbmc3k       2419          779       2275          769\nAAACATTGAGCTAC-1     pbmc3k       4903         1352       2597         1126\nAAACATTGATCAGC-1     pbmc3k       3147         1129       2469         1111\nAAACCGTGCTTCCG-1     pbmc3k       2639          960       2343          942\nAAACCGTGTATGCG-1     pbmc3k        980          521       1901          551\nAAACGCACTGGTAC-1     pbmc3k       2163          781       2148          767\nAAACGCTGACCAGT-1     pbmc3k       2175          782       2158          764\nAAACGCTGGTTCTT-1     pbmc3k       2260          790       2204          773\nAAACGCTGTAGCCA-1     pbmc3k       1275          532       1905          523\nAAACGCTGTTTCTG-1     pbmc3k       1103          550       1988          557\n                 SCT_snn_res.0.8 seurat_clusters nCount_RNA3 nFeature_RNA3\nAAACATACAACCAC-1               4               4        2419           779\nAAACATTGAGCTAC-1               2               2        4903          1352\nAAACATTGATCAGC-1               0               0        3147          1129\nAAACCGTGCTTCCG-1               5               5        2639           960\nAAACCGTGTATGCG-1               6               6         980           521\nAAACGCACTGGTAC-1               0               0        2163           781\nAAACGCTGACCAGT-1               4               4        2175           782\nAAACGCTGGTTCTT-1               4               4        2260           790\nAAACGCTGTAGCCA-1               4               4        1275           532\nAAACGCTGTTTCTG-1               7               7        1103           550\n                   old.ident\nAAACATACAACCAC-1   CD16 Mono\nAAACATTGAGCTAC-1          DC\nAAACATTGATCAGC-1         pDC\nAAACCGTGCTTCCG-1 B Activated\nAAACCGTGTATGCG-1           B\nAAACGCACTGGTAC-1         pDC\nAAACGCTGACCAGT-1   CD16 Mono\nAAACGCTGGTTCTT-1   CD16 Mono\nAAACGCTGTAGCCA-1   CD16 Mono\nAAACGCTGTTTCTG-1       CD8 T\n```\n:::\n\n```{.r .cell-code}\n# Retrieve specific values from the metadata\npbmc$nCount_RNA[1:5]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAAACATACAACCAC-1 AAACATTGAGCTAC-1 AAACATTGATCAGC-1 AAACCGTGCTTCCG-1 \n            2419             4903             3147             2639 \nAAACCGTGTATGCG-1 \n             980 \n```\n:::\n\n```{.r .cell-code}\npbmc[[c(\"nCount_RNA\", \"nFeature_RNA\")]][1:5,]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                 nCount_RNA nFeature_RNA\nAAACATACAACCAC-1       2419          779\nAAACATTGAGCTAC-1       4903         1352\nAAACATTGATCAGC-1       3147         1129\nAAACCGTGCTTCCG-1       2639          960\nAAACCGTGTATGCG-1        980          521\n```\n:::\n\n```{.r .cell-code}\n# Add metadata, see ?AddMetaData\nrandom_group_labels <- c(rep(\"Cancer\", nrow(pbmc@meta.data)/2), \n                         rep(\"Control\", nrow(pbmc@meta.data)/2))\npbmc$groups <- random_group_labels\n```\n:::\n\n\n### 获取表达量信息 (stored as layers in Seurat v5)\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-23_8a591efdb8f3cb711afe2f1c622eddb5'}\n\n```{.r .cell-code}\n# Retrieve data in an expression matrix RNA counts matrix\npbmc[[\"RNA\"]]$counts[1:5, 1:5]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n5 x 5 sparse Matrix of class \"dgCMatrix\"\n              AAACATACAACCAC-1 AAACATTGAGCTAC-1 AAACATTGATCAGC-1\nAL627309.1                   .                .                .\nAP006222.2                   .                .                .\nRP11-206L10.2                .                .                .\nRP11-206L10.9                .                .                .\nLINC00115                    .                .                .\n              AAACCGTGCTTCCG-1 AAACCGTGTATGCG-1\nAL627309.1                   .                .\nAP006222.2                   .                .\nRP11-206L10.2                .                .\nRP11-206L10.9                .                .\nLINC00115                    .                .\n```\n:::\n\n```{.r .cell-code}\n# 或\nLayerData(pbmc, assay = \"RNA\", layer = \"counts\")[1:5, 1:5]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n5 x 5 sparse Matrix of class \"dgCMatrix\"\n              AAACATACAACCAC-1 AAACATTGAGCTAC-1 AAACATTGATCAGC-1\nAL627309.1                   .                .                .\nAP006222.2                   .                .                .\nRP11-206L10.2                .                .                .\nRP11-206L10.9                .                .                .\nLINC00115                    .                .                .\n              AAACCGTGCTTCCG-1 AAACCGTGTATGCG-1\nAL627309.1                   .                .\nAP006222.2                   .                .\nRP11-206L10.2                .                .\nRP11-206L10.9                .                .\nLINC00115                    .                .\n```\n:::\n:::\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-24_df45e211d292d233d780195e9e838c93'}\n\n```{.r .cell-code}\n# Set expression data assume new.data is a new expression matrix\npbmc[[\"RNA\"]]$counts <- new.data\n# 或\nLayerData(pbmc, assay = \"RNA\", layer = \"counts\") <- new.data\n```\n:::\n\n\n### 获取PCA降维信息\n\n实际应用场景见 @sec-Effect_of_pcs_clustering 。\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-25_737ae6108ab650570e0451c92206859a'}\n\n```{.r .cell-code}\n# 获取细胞在所有主成分上的评分（坐标）\nEmbeddings(pbmc, reduction = \"pca\")[1:5, 1:5]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                       PC_1       PC_2       PC_3       PC_4        PC_5\nAAACATACAACCAC-1 -10.165852   1.087645   5.471643 -0.4546899  0.41257085\nAAACATTGAGCTAC-1  -5.814405 -11.244759 -13.092125 -0.4389098  0.05922870\nAAACATTGATCAGC-1  -8.565823   1.643337   5.732506  2.4871682  2.55774745\nAAACCGTGCTTCCG-1  25.632631  -1.695688  -2.335731  3.8829838  0.02413971\nAAACCGTGTATGCG-1  -2.536685  21.282498  -9.103048 -5.1031745 -2.71944035\n```\n:::\n\n```{.r .cell-code}\n# 或\npbmc[['pca']]@cell.embeddings[1:5, 1:5]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                       PC_1       PC_2       PC_3       PC_4        PC_5\nAAACATACAACCAC-1 -10.165852   1.087645   5.471643 -0.4546899  0.41257085\nAAACATTGAGCTAC-1  -5.814405 -11.244759 -13.092125 -0.4389098  0.05922870\nAAACATTGATCAGC-1  -8.565823   1.643337   5.732506  2.4871682  2.55774745\nAAACCGTGCTTCCG-1  25.632631  -1.695688  -2.335731  3.8829838  0.02413971\nAAACCGTGTATGCG-1  -2.536685  21.282498  -9.103048 -5.1031745 -2.71944035\n```\n:::\n\n```{.r .cell-code}\n# 获取基因在所有主成分上的评分（坐标）\nLoadings(pbmc, reduction = \"pca\")[1:5, 1:5]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              PC_1         PC_2        PC_3        PC_4         PC_5\nS100A9  0.19825859 -0.008571611  0.09650808 -0.28883733 -0.005721886\nGNLY   -0.02330150  0.195582622 -0.10436066 -0.06562367 -0.093134754\nLYZ     0.23833773 -0.023491803  0.06414334 -0.26984270 -0.010442604\nS100A8  0.16884448 -0.007179440  0.09962703 -0.29729996 -0.001143372\nNKG7   -0.04601942  0.296816129 -0.13906341 -0.08608150 -0.061192287\n```\n:::\n\n```{.r .cell-code}\n# 或\npbmc[[\"pca\"]]@feature.loadings[1:5, 1:5]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              PC_1         PC_2        PC_3        PC_4         PC_5\nS100A9  0.19825859 -0.008571611  0.09650808 -0.28883733 -0.005721886\nGNLY   -0.02330150  0.195582622 -0.10436066 -0.06562367 -0.093134754\nLYZ     0.23833773 -0.023491803  0.06414334 -0.26984270 -0.010442604\nS100A8  0.16884448 -0.007179440  0.09962703 -0.29729996 -0.001143372\nNKG7   -0.04601942  0.296816129 -0.13906341 -0.08608150 -0.061192287\n```\n:::\n\n```{.r .cell-code}\n# 提取PCA信息中的第二主成分，并展示对该主成分影响最大的前5个基因名\nprint(pbmc[[\"pca\"]], dims = 2, nfeatures = 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nPC_ 2 \nPositive:  NKG7, CCL5, GZMB, GNLY, GZMA \nNegative:  HLA-DRA, CD74, CD79A, HLA-DPB1, HLA-DQA1 \n```\n:::\n:::\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-26_18bbb285d5a0aa94883d3da5d9ecac7b'}\n\n```{.r .cell-code}\n# Create custom dimensional reduction loadings matrix is optional\nnew_reduction <- CreateDimReducObject(embeddings = new.embeddings, \n                                      loadings = new.loadings, \n                                      key = \"custom_pca\")\n# 或\npbmc[[\"custom_pca\"]] <- new_reduction\n```\n:::\n\n\n### 通过`FetchData`从Seurat对象中获取任意信息\n\n`FetchData` can access anything from expression matrices, cell embeddings, or metadata use the previously listed commands to access entire matrices。通过FetchData可以提取包括表达量数据、PCA分数以及meta.data内的任何变量并形成一个数据框。实际应用场景见 @sec-Effect_of_pcs_clustering 。\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-27_e36cad597f5681a89194c475ba7c9c54'}\n\n```{.r .cell-code}\nFetchData(object = pbmc, \n          vars = c(\"PC_1\", \"nFeature_RNA\", \"MS4A1\"), \n          layer = \"counts\") |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                       PC_1 nFeature_RNA MS4A1\nAAACATACAACCAC-1 -10.165852          779     0\nAAACATTGAGCTAC-1  -5.814405         1352     4\nAAACATTGATCAGC-1  -8.565823         1129     0\nAAACCGTGCTTCCG-1  25.632631          960     0\nAAACCGTGTATGCG-1  -2.536685          521     0\nAAACGCACTGGTAC-1  -6.559842          781     0\n```\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## Seurat对象取子集和合并\n\n### 取子集 {#sec-subset_seurat}\n\n实际应用见 @sec-filtering 。\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-28_0f28cc7428d41467006114da8558ba24'}\n\n```{.r .cell-code}\n# 根据meta data中的信息取子集\nsubset(x = pbmc, subset = groups == \"Cancer\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn object of class Seurat \n40000 features across 1350 samples within 3 assays \nActive assay: SCT (12572 features, 3000 variable features)\n 3 layers present: counts, data, scale.data\n 2 other assays present: RNA, RNA3\n 2 dimensional reductions calculated: pca, umap\n```\n:::\n\n```{.r .cell-code}\n# 提取特定cell identities, also see ?SubsetData\nsubset(x = pbmc, idents = \"B cell\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn object of class Seurat \n40000 features across 157 samples within 3 assays \nActive assay: SCT (12572 features, 3000 variable features)\n 3 layers present: counts, data, scale.data\n 2 other assays present: RNA, RNA3\n 2 dimensional reductions calculated: pca, umap\n```\n:::\n\n```{.r .cell-code}\n# 反选\nsubset(x = pbmc, idents = c(\"CD4 Naive T\", \"CD8 T\"), invert = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn object of class Seurat \n40000 features across 2505 samples within 3 assays \nActive assay: SCT (12572 features, 3000 variable features)\n 3 layers present: counts, data, scale.data\n 2 other assays present: RNA, RNA3\n 2 dimensional reductions calculated: pca, umap\n```\n:::\n\n```{.r .cell-code}\n# 根据特定gene/feature表达水平取子集\nsubset(x = pbmc, subset = S100A9 > 1.5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn object of class Seurat \n40000 features across 519 samples within 3 assays \nActive assay: SCT (12572 features, 3000 variable features)\n 3 layers present: counts, data, scale.data\n 2 other assays present: RNA, RNA3\n 2 dimensional reductions calculated: pca, umap\n```\n:::\n\n```{.r .cell-code}\n# 采用多个标准取子集\nsubset(x = pbmc, subset = S100A9 > 1.5 & PC_1 > 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn object of class Seurat \n40000 features across 517 samples within 3 assays \nActive assay: SCT (12572 features, 3000 variable features)\n 3 layers present: counts, data, scale.data\n 2 other assays present: RNA, RNA3\n 2 dimensional reductions calculated: pca, umap\n```\n:::\n\n```{.r .cell-code}\nsubset(x = pbmc, subset = S100A9 > 1.5, idents = \"CD8 T\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn object of class Seurat \n40000 features across 45 samples within 3 assays \nActive assay: SCT (12572 features, 3000 variable features)\n 3 layers present: counts, data, scale.data\n 2 other assays present: RNA, RNA3\n 2 dimensional reductions calculated: pca, umap\n```\n:::\n\n```{.r .cell-code}\n# Downsample the number of cells per identity class\nsubset(x = pbmc, downsample = 100)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn object of class Seurat \n40000 features across 1088 samples within 3 assays \nActive assay: SCT (12572 features, 3000 variable features)\n 3 layers present: counts, data, scale.data\n 2 other assays present: RNA, RNA3\n 2 dimensional reductions calculated: pca, umap\n```\n:::\n:::\n\n\n### 分割layers\n\nIn Seurat v5, users can now split in object directly into different layers keeps expression data in one object, but splits multiple samples into layers can proceed directly to integration workflow after splitting layers。实际应用场景见 @sec-Single-cell_data_integration 。\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-29_aef074e8b80b100366c842b0f3661071'}\n\n```{.r .cell-code}\nDefaultAssay(pbmc) <- \"RNA\"\n# 按照meta.data中的stim列分割layer\npbmc[[\"RNA\"]] <- split(pbmc[[\"RNA\"]], f = pbmc$groups)\n```\n:::\n\n\n![](images/截屏2024-01-15%2018.36.23.png)\n\n如果需要，例如在整合之后，可以将各layers再次合并在一起：\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-30_2077ea7cbbe8494df2ca044dc71149bf'}\n\n```{.r .cell-code}\npbmc[[\"RNA\"]] <- JoinLayers(pbmc[[\"RNA\"]])\n```\n:::\n\n\n### 分割Seurat\n\nIn line with prior workflows, you can also split your Seurat object into a **list** of multiple objects based on a metadata column creates a list of two objects。通过`SplitObject()`分割Seurat之后生成的是包含多个Seurat对象的列表。\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-31_33d585cce23aa8cbbb5ff751f0f0ae5e'}\n\n```{.r .cell-code}\nseurat_list <- SplitObject(pbmc, split.by = \"groups\")\nseurat_list\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$Cancer\nAn object of class Seurat \n40000 features across 1350 samples within 3 assays \nActive assay: RNA (13714 features, 0 variable features)\n 1 layer present: counts\n 2 other assays present: SCT, RNA3\n 2 dimensional reductions calculated: pca, umap\n\n$Control\nAn object of class Seurat \n40000 features across 1350 samples within 3 assays \nActive assay: RNA (13714 features, 0 variable features)\n 1 layer present: counts\n 2 other assays present: SCT, RNA3\n 2 dimensional reductions calculated: pca, umap\n```\n:::\n:::\n\n\n![](images/截屏2024-01-15%2018.42.35.png)\n\n### Merge objects (without integration)\n\nIn Seurat v5, merging creates a single object, but **keeps the expression information split into different layers** for integration. If not proceeding with integration, rejoin the layers after merging. 实际应用场景，见[此链接](https://hbctraining.github.io/scRNA-seq_online/lessons/03_SC_quality_control-setup.html)。\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-32_35d961575e80807e389eea91ff224a6b'}\n\n```{.r .cell-code}\n# Merge two Seurat objects\nmerged_pbmc <- merge(x = seurat_list[[\"Control\"]], \n                     y = seurat_list[[\"Cancer\"]])\n```\n:::\n\n\n![](images/截屏2024-01-15%2018.19.15.png)\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-33_5a94787ad67e6e883bd0ea07e20bc0b9'}\n\n```{.r .cell-code}\n# Example to merge more than two Seurat objects\nmerge(x = pbmc1, \n      y = list(pbmc2, pbmc3))\n```\n:::\n\n\n### Merge objects (with integration)\n\n关于单细胞数据的整合，参考： @sec-Single-cell_data_integration 。\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-34_dfcb66e922a2af7fec707258a75d3a80'}\n\n```{.r .cell-code}\nmerged_pbmc <- NormalizeData(merged_pbmc, verbose = F)\nmerged_pbmc <- FindVariableFeatures(merged_pbmc, verbose = F)\nmerged_pbmc <- ScaleData(merged_pbmc, verbose = F)\nmerged_pbmc <- RunPCA(merged_pbmc, verbose = F)\nmerged_pbmc <- IntegrateLayers(object = merged_pbmc, \n                               method = RPCAIntegration, \n                               orig.reduction = \"pca\", \n                               new.reduction = \"integrated.rpca\",\n                               verbose = FALSE)\n\n# now that integration is complete, rejoin layers\nmerged_pbmc[[\"RNA\"]] <- JoinLayers(merged_pbmc[[\"RNA\"]])\nmerged_pbmc\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn object of class Seurat \n40000 features across 2700 samples within 3 assays \nActive assay: RNA (13714 features, 2000 variable features)\n 3 layers present: data, counts, scale.data\n 2 other assays present: SCT, RNA3\n 2 dimensional reductions calculated: pca, integrated.rpca\n```\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n::: callout-tip\n###### Additional resources\n\nUsers who are particularly interested in some of the technical changes to data storage in Seurat v5 can explore the following resources:\n\n-   [SeuratObject manual](https://mojaveazure.github.io/seurat-object/)\n\n-   [Seurat v5 and Assay5 introductory vignette](https://satijalab.org/seurat/articles/seurat5_essential_commands)\n:::\n\n------------------------------------------------------------------------\n\n::: {.callout-note collapse=\"true\" icon=\"false\"}\n## Session Info\n\n\n::: {.cell hash='seurat_command_list_cache/html/unnamed-chunk-35_bfce99e829032d4a353d3d8a9398f881'}\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.2 (2023-10-31)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Sonoma 14.2.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Asia/Shanghai\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] Seurat_5.0.1       SeuratObject_5.0.1 sp_2.1-2          \n\nloaded via a namespace (and not attached):\n  [1] deldir_2.0-2           pbapply_1.7-2          gridExtra_2.3         \n  [4] rlang_1.1.2            magrittr_2.0.3         RcppAnnoy_0.0.21      \n  [7] spatstat.geom_3.2-7    matrixStats_1.2.0      ggridges_0.5.5        \n [10] compiler_4.3.2         png_0.1-8              vctrs_0.6.5           \n [13] reshape2_1.4.4         stringr_1.5.1          pkgconfig_2.0.3       \n [16] fastmap_1.1.1          ellipsis_0.3.2         utf8_1.2.4            \n [19] promises_1.2.1         rmarkdown_2.25         purrr_1.0.2           \n [22] xfun_0.41              jsonlite_1.8.8         goftest_1.2-3         \n [25] later_1.3.2            spatstat.utils_3.0-4   irlba_2.3.5.1         \n [28] parallel_4.3.2         cluster_2.1.6          R6_2.5.1              \n [31] ica_1.0-3              stringi_1.8.3          RColorBrewer_1.1-3    \n [34] spatstat.data_3.0-3    reticulate_1.34.0      parallelly_1.36.0     \n [37] lmtest_0.9-40          scattermore_1.2        Rcpp_1.0.11           \n [40] knitr_1.45             tensor_1.5             future.apply_1.11.0   \n [43] zoo_1.8-12             sctransform_0.4.1      httpuv_1.6.13         \n [46] Matrix_1.6-4           splines_4.3.2          igraph_1.6.0          \n [49] tidyselect_1.2.0       abind_1.4-5            rstudioapi_0.15.0     \n [52] yaml_2.3.8             spatstat.random_3.2-2  codetools_0.2-19      \n [55] miniUI_0.1.1.1         spatstat.explore_3.2-5 listenv_0.9.0         \n [58] lattice_0.22-5         tibble_3.2.1           plyr_1.8.9            \n [61] shiny_1.8.0            ROCR_1.0-11            evaluate_0.23         \n [64] Rtsne_0.17             future_1.33.0          fastDummies_1.7.3     \n [67] survival_3.5-7         polyclip_1.10-6        fitdistrplus_1.1-11   \n [70] pillar_1.9.0           KernSmooth_2.23-22     plotly_4.10.3         \n [73] generics_0.1.3         RcppHNSW_0.5.0         ggplot2_3.4.4         \n [76] munsell_0.5.0          scales_1.3.0           globals_0.16.2        \n [79] xtable_1.8-4           glue_1.6.2             lazyeval_0.2.2        \n [82] tools_4.3.2            data.table_1.14.10     RSpectra_0.16-1       \n [85] RANN_2.6.1             leiden_0.4.3.1         dotCall64_1.1-1       \n [88] cowplot_1.1.2          grid_4.3.2             tidyr_1.3.0           \n [91] colorspace_2.1-0       nlme_3.1-164           patchwork_1.1.3       \n [94] cli_3.6.2              spatstat.sparse_3.0-3  spam_2.10-0           \n [97] fansi_1.0.6            viridisLite_0.4.2      dplyr_1.1.4           \n[100] uwot_0.1.16            gtable_0.3.4           digest_0.6.33         \n[103] progressr_0.14.0       ggrepel_0.9.4          htmlwidgets_1.6.4     \n[106] htmltools_0.5.7        lifecycle_1.0.4        httr_1.4.7            \n[109] mime_0.12              MASS_7.3-60           \n```\n:::\n:::\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{
  "hash": "6d8ff569ef96813afd54449797c95f53",
  "result": {
    "markdown": "# 消除细胞周期的影响 {#sec-Elimination_of_cell_cycle_effects}\n\n> 原文：[*Cell-Cycle Scoring and Regression*](https://satijalab.org/seurat/articles/cell_cycle_vignette)\n>\n> 原文发布日期：2023年10月31日\n\nWe demonstrate how to mitigate the effects of cell cycle heterogeneity in scRNA-seq data by calculating **cell cycle phase scores** based on canonical markers, and regressing these out of the data during pre-processing. We demonstrate this on a dataset of murine hematopoietic progenitors [@nestorowa2016].You can download the files needed to run this vignette [here](https://www.dropbox.com/s/3dby3bjsaf5arrw/cell_cycle_vignette_files.zip?dl=1).\n\n## 数据读取和预处理\n\n### 创建Seurat对象\n\n\n::: {.cell hash='cell_cycle_regression_cache/html/unnamed-chunk-1_8dd79b55dd7c829d5927f38dd6f23502'}\n\n```{.r .cell-code}\n# Read in the expression matrix \nexp.mat <- read.table(file = \"data/seurat_official/cell_cycle_vignette_files/nestorawa_forcellcycle_expressionMatrix.txt\",\n                      header = TRUE, \n                      as.is = TRUE, #保留字符型变量\n                      row.names = 1)\n# Create our Seurat object and complete the initalization steps\nlibrary(Seurat)\nmarrow <- CreateSeuratObject(counts = Matrix::Matrix(as.matrix(exp.mat), \n                                                     sparse = T))\nmarrow\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn object of class Seurat \n24193 features across 774 samples within 1 assay \nActive assay: RNA (24193 features, 0 variable features)\n 1 layer present: counts\n```\n:::\n\n```{.r .cell-code}\nhead(marrow@meta.data, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         orig.ident nCount_RNA nFeature_RNA\nProg_013       Prog    2563089        10211\nProg_019       Prog    3030620         9991\nProg_031       Prog    1293487        10192\nProg_037       Prog    1357987         9599\nProg_008       Prog    4079891        10540\n```\n:::\n\n```{.r .cell-code}\nmarrow <- NormalizeData(marrow)\nmarrow <- FindVariableFeatures(marrow, selection.method = \"vst\")\nmarrow <- ScaleData(marrow, features = rownames(marrow))\n```\n:::\n\n\n### 获取细胞周期marker基因列表\n\nA list of cell cycle markers, from Tirosh et al, 2015, is loaded with Seurat. We can segregate this list into markers of G2/M phase and markers of S phase\n\n\n::: {.cell hash='cell_cycle_regression_cache/html/unnamed-chunk-2_ab4cce1b2e6567118f1360a24262b9e8'}\n\n```{.r .cell-code}\ns.genes <- cc.genes$s.genes\ng2m.genes <- cc.genes$g2m.genes\n```\n:::\n\n\n### 降维\n\nIf we run a PCA on our object, using the variable genes we found in `FindVariableFeatures()` above, we see that while most of the variance can be explained by lineage, **PC8 and PC10 are split on cell-cycle genes** including ***TOP2A*** and ***MKI67***. We will attempt to regress this signal from the data, **so that cell-cycle heterogeneity does not contribute to PCA or downstream analysis**.\n\n\n::: {.cell hash='cell_cycle_regression_cache/html/unnamed-chunk-3_e374f2aee18cf78775caea25e1f8caba'}\n\n```{.r .cell-code}\nmarrow <- RunPCA(marrow, \n                 features = VariableFeatures(marrow), \n                 ndims.print = 6:10, \n                 nfeatures.print = 10)\nDimHeatmap(marrow, dims = c(8, 10))\n```\n\n::: {.cell-output-display}\n![](cell_cycle_regression_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## 消除细胞周期的影响\n\n### 计算细胞周期评分 {#sec-Calculating_cell_cycle_scores}\n\nFirst, we assign each cell a score, **based on its expression of G2/M and S phase markers**. These marker sets should be **anticorrelated** in their expression levels, and **cells expressing neither are likely not cycling and in G1 phase**.\n\n::: {.callout-tip collapse=\"true\"}\n##### [细胞周期](https://zh.wikipedia.org/zh-cn/細胞週期)\n\n**细胞周期**（cell cycle），是指能持续分裂的真核细胞从一次有丝分裂结束后，再到下一次分裂结束的循环过程（准确来说只要有DNA复制，不管是不是有丝分裂它都有细胞周期。生殖细胞无细胞周期。)。\n\n**细胞周期的划分**\n\n总的看来，细胞周期通常可划分为分裂间期（I期）和**分裂期（M期）**，分裂间期是物质准备和积累阶段，分裂期则是细胞增殖的实施过程。整个周期表示为 I期→M期。\n\n其中分裂间期（I期）又常常可以划分为**DNA合成前期（G1）**，**DNA合成期（S）**和**DNA合成后期（G2）**。在此期间的任务主要是完成染色质中的DNA复制和相关蛋白质的合成。将I期细分之后，整个细胞周期可以表示为：G1期→S期→G2期→M期。\n\n细胞进入G1期可能出现三种情况，其中暂不继续增殖，如骨髓干细胞和处于不利状态下的癌细胞，但在某些刺激下，这些细胞又可以继续生长分裂，因此有人把这种**非增殖状态的G1期细胞称为G0期细胞**。以区别处于增殖状态的G1期细胞。 而分裂期通常分作分裂前期(Prophase)、前中期(Prometaphase)、中期(Metaphase)、后期(Anaphase)和末期(Telophase)5个阶段，在此期间进行细胞物质的平均分配并形成两个新的细胞。\n\n![](images/Cell_Cycle_2-2.svg.png){width=\"266\"}\n\n-   **G0:** Quiescence or resting phase. The cell is not actively dividing, which is common for cells that are fully differentiated. Some types of cells enter G0 for long periods of time (many neuronal cells), while **other cell types never enter G0 by continuously dividing (epithelial cells)**.\n-   **G1:** Gap 1 phase represents the **beginning of interphase**. During G1 there is growth of the non-chromosomal components of the cells. From this phase, the cell may enter G0 or S phase.\n-   **S:** Synthesis phase for the replication of the chromosomes (also part of interphase).\n-   **G2:** Gap 2 phase represents the **end of interphase**, prior to entering the mitotic phase. During this phase th cell grows in preparation for mitosis and the spindle forms.\n-   **M:** M phase is the nuclear division of the cell (consisting of prophase, metaphase, anaphase and telophase).\n\n|   状态   |   阶段   |   缩写   |                                                            描述                                                            |\n|:-------:|:-------:|:-------:|:--------------------------------------------:|\n|   休息   |  G~0~期  | **G~0~** |                                               细胞离开周期并停止分裂的阶段。                                               |\n|   间期   |  G~1~期  |  **G1**  |                                       G~1~检查点控制机制确保一切准备好进行DNA合成。                                        |\n|   合成   |    S     |  **S**   |                                                  DNA复制发生在这个阶段。                                                   |\n|  G~2~期  |   G~2~   |  **G2**  |     在DNA合成和有丝分裂之间的差距期间，细胞将继续增长。 G~2~检查点控制机制确保一切准备好进入M（有丝分裂）阶段并分裂。      |\n| 细胞分裂 | 有丝分裂 |  **M**   | 细胞生长停止，细胞能量集中在有序地分裂成两个子细胞。有丝分裂中期的检查点（Metaphase Checkpoint）确保细胞可以完成细胞分裂。 |\n:::\n\nWe assign scores in the `CellCycleScoring()` function, which stores S and G2/M scores in object meta data, along with the **predicted classification of each cell in either G2M, S or G1 phase**. `CellCycleScoring()` can also set the identity of the Seurat object to the cell-cycle phase by passing `set.ident = TRUE` (the original identities are stored as `old.ident`). Please note that Seurat does not use the discrete classifications (G2M/G1/S) in downstream cell cycle regression. Instead, it uses the **quantitative scores for G2M and S phase**. However, we provide our predicted classifications in case they are of interest.\n\nWe score single cells based on the scoring strategy described in [@tirosh2016]. See `?AddModuleScore()` in Seurat for more information, this function can be used to calculate supervised module scores for any gene list.\n\n\n::: {.cell hash='cell_cycle_regression_cache/html/unnamed-chunk-4_af1d32a7da6e3dc7cebe91e53519acb3'}\n\n```{.r .cell-code}\nmarrow <- CellCycleScoring(marrow, \n                           s.features = s.genes, \n                           g2m.features = g2m.genes, \n                           set.ident = TRUE)\ntable(Idents(marrow))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n G1 G2M   S \n287 168 319 \n```\n:::\n\n```{.r .cell-code}\n# view cell cycle scores and phase assignments\nhead(marrow@meta.data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         orig.ident nCount_RNA nFeature_RNA     S.Score  G2M.Score Phase\nProg_013       Prog    2563089        10211 -0.14248691 -0.4680395    G1\nProg_019       Prog    3030620         9991 -0.16915786  0.5851766   G2M\nProg_031       Prog    1293487        10192 -0.34627038 -0.3971879    G1\nProg_037       Prog    1357987         9599 -0.44270212  0.6820229   G2M\nProg_008       Prog    4079891        10540  0.55854051  0.1284359     S\nProg_014       Prog    2569783        10788  0.07116218  0.3166073   G2M\n         old.ident\nProg_013      Prog\nProg_019      Prog\nProg_031      Prog\nProg_037      Prog\nProg_008      Prog\nProg_014      Prog\n```\n:::\n:::\n\n\n#### 可视化细胞周期的影响\n\n可视化细胞周期marker的表达分布：\n\n\n::: {.cell hash='cell_cycle_regression_cache/html/unnamed-chunk-5_b8be36a4936a3b6109c6b4cef88cfd4a'}\n\n```{.r .cell-code}\nRidgePlot(marrow, \n          features = c(\"PCNA\", \"TOP2A\", \"MCM6\", \"MKI67\"), \n          ncol = 2)\n```\n\n::: {.cell-output-display}\n![](cell_cycle_regression_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n以细胞周期marker为计算依据运行PCA：\n\n\n::: {.cell hash='cell_cycle_regression_cache/html/unnamed-chunk-6_d6356d2c47c8fe18c2b51d00ac12c089'}\n\n```{.r .cell-code}\nmarrow <- RunPCA(marrow, features = c(s.genes, g2m.genes))\nDimPlot(marrow)\n```\n\n::: {.cell-output-display}\n![](cell_cycle_regression_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n> The PCA running on cell cycle genes reveals, unsurprisingly, that **cells separate entirely by phase**.\n\n这个PCA图也可以用ggplot2的语法进一步修改：\n\n\n::: {.cell hash='cell_cycle_regression_cache/html/unnamed-chunk-7_16d8ee61ba602d993e172c545752b6f4'}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nDimPlot(marrow) + \n  theme(axis.title = element_text(size = 18), \n        legend.text = element_text(size = 18)) +\n  guides(colour = guide_legend(override.aes = list(size = 10)))\n```\n\n::: {.cell-output-display}\n![](cell_cycle_regression_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n### 回归（regress out）细胞周期评分\n\nWe now attempt to subtract ('regress out') this source of heterogeneity from the data. For users of Seurat v1.4, this was implemented in `RegressOut`. However, as the results of this procedure are stored in the scaled data slot (therefore overwriting the output of `ScaleData()`), we now merge this functionality into the `ScaleData()` function itself.\n\nFor each gene, Seurat models the relationship between **gene expression** and the **S and G2M cell cycle scores**. The scaled residuals of this model represent a 'corrected' expression matrix, that can be used downstream for dimensional reduction.\n\n\n::: {.cell hash='cell_cycle_regression_cache/html/unnamed-chunk-8_3dd0aa5dbfffb05faded2086f3331ff4'}\n\n```{.r .cell-code}\nmarrow <- ScaleData(marrow, \n                    vars.to.regress = c(\"S.Score\", \"G2M.Score\"), \n                    features = rownames(marrow))\n```\n:::\n\n\nNow, a PCA on the variable genes no longer returns components associated with cell cycle:\n\n\n::: {.cell hash='cell_cycle_regression_cache/html/unnamed-chunk-9_9581a8472e008a6c3db8008d3cc2e34d'}\n\n```{.r .cell-code}\nmarrow <- RunPCA(marrow, \n                 features = VariableFeatures(marrow), \n                 nfeatures.print = 10)\n```\n:::\n\n\nWhen running a PCA on only cell cycle genes, cells no longer separate by cell-cycle phase:\n\n\n::: {.cell hash='cell_cycle_regression_cache/html/unnamed-chunk-10_f1990ec3596b2c81ea17c5fb08dbc335'}\n\n```{.r .cell-code}\nmarrow <- RunPCA(marrow, \n                 features = c(s.genes, g2m.genes))\nDimPlot(marrow)\n```\n\n::: {.cell-output-display}\n![](cell_cycle_regression_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nAs the best cell cycle markers are extremely well conserved across tissues and species, we have found this procedure to work robustly and reliably on diverse datasets.\n\n## 消除细胞周期的影响同时保留增殖细胞与静止细胞的区分\n\nThe procedure above removes all signal associated with cell cycle. In some cases, we've found that this can negatively impact downstream analysis, particularly in differentiating processes (like **murine hematopoiesis**), where stem cells are quiescent and differentiated cells are proliferating (or vice versa). **In this case, regressing out all cell cycle effects can blur the distinction between stem and progenitor cells as well**.\n\nAs an alternative, we suggest regressing out the **difference** between the G2/M and S phase scores. This means that signals separating non-cycling cells and cycling cells will be maintained, but differences in cell cycle phase among proliferating cells (which are often uninteresting), will be regressed out of the data\n\n\n::: {.cell hash='cell_cycle_regression_cache/html/unnamed-chunk-11_a072778c17be5f996086c3f85b3b9fab'}\n\n```{.r .cell-code}\nmarrow$CC.Difference <- marrow$S.Score - marrow$G2M.Score\nmarrow <- ScaleData(marrow, \n                    vars.to.regress = \"CC.Difference\", \n                    features = rownames(marrow))\n```\n:::\n\n\nCell cycle effects strongly mitigated in PCA：\n\n\n::: {.cell hash='cell_cycle_regression_cache/html/unnamed-chunk-12_e1cb48f42e6e93ad343d5ab1e7b2fcd7'}\n\n```{.r .cell-code}\nmarrow <- RunPCA(marrow, \n                 features = VariableFeatures(marrow), \n                 nfeatures.print = 10)\n```\n:::\n\n\nWhen running a PCA on cell cycle genes, **actively proliferating cells remain distinct from G1 cells** however, within actively proliferating cells, **G2M and S phase cells group together：**\n\n\n::: {.cell hash='cell_cycle_regression_cache/html/unnamed-chunk-13_fa2474ced01a1093cae2840f84207230'}\n\n```{.r .cell-code}\nmarrow <- RunPCA(marrow, features = c(s.genes, g2m.genes))\nDimPlot(marrow)\n```\n\n::: {.cell-output-display}\n![](cell_cycle_regression_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n::: {.callout-note collapse=\"true\" icon=\"false\"}\n## Session Info\n\n\n::: {.cell hash='cell_cycle_regression_cache/html/unnamed-chunk-14_c152a16362b324c8ad98292cb4b1d823'}\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.2 (2023-10-31)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Sonoma 14.2.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Asia/Shanghai\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] ggplot2_3.4.4      Seurat_5.0.1       SeuratObject_5.0.1 sp_2.1-2          \n\nloaded via a namespace (and not attached):\n  [1] deldir_2.0-2           pbapply_1.7-2          gridExtra_2.3         \n  [4] rlang_1.1.3            magrittr_2.0.3         RcppAnnoy_0.0.21      \n  [7] spatstat.geom_3.2-7    matrixStats_1.2.0      ggridges_0.5.5        \n [10] compiler_4.3.2         png_0.1-8              vctrs_0.6.5           \n [13] reshape2_1.4.4         stringr_1.5.1          pkgconfig_2.0.3       \n [16] fastmap_1.1.1          ellipsis_0.3.2         labeling_0.4.3        \n [19] utf8_1.2.4             promises_1.2.1         rmarkdown_2.25        \n [22] purrr_1.0.2            xfun_0.41              jsonlite_1.8.8        \n [25] goftest_1.2-3          later_1.3.2            spatstat.utils_3.0-4  \n [28] irlba_2.3.5.1          parallel_4.3.2         cluster_2.1.6         \n [31] R6_2.5.1               ica_1.0-3              stringi_1.8.3         \n [34] RColorBrewer_1.1-3     spatstat.data_3.0-4    reticulate_1.34.0     \n [37] parallelly_1.36.0      lmtest_0.9-40          scattermore_1.2       \n [40] Rcpp_1.0.12            knitr_1.45             tensor_1.5            \n [43] future.apply_1.11.1    zoo_1.8-12             sctransform_0.4.1     \n [46] httpuv_1.6.13          Matrix_1.6-5           splines_4.3.2         \n [49] igraph_1.6.0           tidyselect_1.2.0       abind_1.4-5           \n [52] rstudioapi_0.15.0      yaml_2.3.8             spatstat.random_3.2-2 \n [55] codetools_0.2-19       miniUI_0.1.1.1         spatstat.explore_3.2-5\n [58] listenv_0.9.0          lattice_0.22-5         tibble_3.2.1          \n [61] plyr_1.8.9             withr_3.0.0            shiny_1.8.0           \n [64] ROCR_1.0-11            evaluate_0.23          Rtsne_0.17            \n [67] future_1.33.1          fastDummies_1.7.3      survival_3.5-7        \n [70] polyclip_1.10-6        fitdistrplus_1.1-11    pillar_1.9.0          \n [73] KernSmooth_2.23-22     plotly_4.10.4          generics_0.1.3        \n [76] RcppHNSW_0.5.0         munsell_0.5.0          scales_1.3.0          \n [79] globals_0.16.2         xtable_1.8-4           glue_1.7.0            \n [82] lazyeval_0.2.2         tools_4.3.2            data.table_1.14.10    \n [85] RSpectra_0.16-1        RANN_2.6.1             leiden_0.4.3.1        \n [88] dotCall64_1.1-1        cowplot_1.1.2          grid_4.3.2            \n [91] tidyr_1.3.0            colorspace_2.1-0       nlme_3.1-164          \n [94] patchwork_1.2.0        cli_3.6.2              spatstat.sparse_3.0-3 \n [97] spam_2.10-0            fansi_1.0.6            viridisLite_0.4.2     \n[100] dplyr_1.1.4            uwot_0.1.16            gtable_0.3.4          \n[103] digest_0.6.34          progressr_0.14.0       ggrepel_0.9.5         \n[106] farver_2.1.1           htmlwidgets_1.6.4      htmltools_0.5.7       \n[109] lifecycle_1.0.4        httr_1.4.7             mime_0.12             \n[112] MASS_7.3-60.0.1       \n```\n:::\n:::\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
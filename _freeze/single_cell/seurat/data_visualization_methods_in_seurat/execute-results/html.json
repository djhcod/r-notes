{
  "hash": "d4df4a97f95512bb31b7220ea8390e9e",
  "result": {
    "markdown": "# Seurat中的数据可视化方法 {#sec-Data_visualization_methods_in_Seurat}\n\n> 原文：[*Data visualization methods in Seurat*](https://satijalab.org/seurat/articles/visualization_vignette)\n>\n> 原文发布日期：2023-10-31\n\nWe'll demonstrate visualization techniques in Seurat using our previously computed Seurat object from the 2,700 PBMC tutorial. You can download this dataset from [SeuratData](https://github.com/satijalab/seurat-data)。官方教程是通过`SeuratData`包的`InstallData`函数来下载案例数据，可能需要开启全局代理才能下载：\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-1_4a0f7c96c48c62caee11f5f282661d47'}\n\n````{.cell-code}\n```{{r}}\n#| eval: false\ndevtools::install_github('satijalab/seurat-data')\nSeuratData::InstallData(\"pbmc3k\")\n```\n````\n:::\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-2_610743fccec69f9717b9dbc25dffce81'}\n\n````{.cell-code}\n```{{r}}\n#| eval: false\nlibrary(SeuratData)\npbmc3k.final <- LoadData(\"pbmc3k\", type = \"pbmc3k.final\")\npbmc3k.final$groups <- sample(c(\"group1\", \n                                \"group2\"), \n                              size = ncol(pbmc3k.final), \n                              replace = TRUE)\npbmc3k.final\n```\n````\n:::\n\n\n这里我将下载下来的数据保存起来：\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-3_05db33850ab867bd62245b9f6ce683a7'}\n\n````{.cell-code}\n```{{r}}\n#| eval: false\nsaveRDS(pbmc3k.final, file = \"data/seurat_official/pbmc3k.final.rds\")\n```\n````\n:::\n\n\n后面我们直接从本地读取这个Seurat对象：\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-4_a0b288e8ca3d15c149ba6ec766c3ffaf'}\n\n```{.r .cell-code}\npbmc3k.final <- readRDS(\"data/seurat_official/pbmc3k.final.rds\")\n```\n:::\n\n\n## 5种可视化marker gene的方法\n\n定义要检查的marker gene：\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-5_440c2724bea340ef113ca955b8ef4d1c'}\n\n```{.r .cell-code}\nfeatures <- c(\"LYZ\", \"CCL5\", \"IL32\", \"PTPRCAP\", \"FCGR3A\", \"PF4\")\n```\n:::\n\n\n### Ridge plots\n\nRidge plots - from ggridges. Visualize single cell expression distributions in each cluster\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-6_908042c0151b7aeecbca0979337e49cd'}\n\n```{.r .cell-code}\nlibrary(Seurat)\nRidgePlot(pbmc3k.final, features = features, ncol = 2)\n```\n\n::: {.cell-output-display}\n![](data_visualization_methods_in_seurat_files/figure-html/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n### Violin plot\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-7_16d54170a20c5aacc9354040a71e4058'}\n\n```{.r .cell-code}\nVlnPlot(pbmc3k.final, features = features)\n```\n\n::: {.cell-output-display}\n![](data_visualization_methods_in_seurat_files/figure-html/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\nViolin plots can be split on some variable. Simply add the splitting variable to object metadata and pass it to the `split.by` argument. 通过添加`split.by`参数，展示marker gene在不同的样本组别中的表达。\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-8_584ced3cab42935fa48a0c4905d1a48b'}\n\n```{.r .cell-code}\nVlnPlot(pbmc3k.final, \n        features = \"percent.mt\", \n        split.by = \"groups\")\n```\n\n::: {.cell-output-display}\n![](data_visualization_methods_in_seurat_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n### Feature plot\n\nVisualize feature expression in low-dimensional space\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-9_3c54a8da978d0b19c87d0f265b64512f'}\n\n```{.r .cell-code}\nFeaturePlot(pbmc3k.final, features = features)\n```\n\n::: {.cell-output-display}\n![](data_visualization_methods_in_seurat_files/figure-html/unnamed-chunk-9-1.png){width=768}\n:::\n:::\n\n\n#### 对`FeaturePlot`的进一步修饰 {#sec-Further_modifications_to_featureplot}\n\n原始图像：\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-10_704dd11f76cab1acb4d81d3acd3a554a'}\n\n```{.r .cell-code}\nFeaturePlot(pbmc3k.final, features = \"MS4A1\")\n```\n\n::: {.cell-output-display}\n![](data_visualization_methods_in_seurat_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nAdjust the contrast in the plot。通过`min.cutoff`和`max.cutoff`调整颜色范围。\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-11_a59bca5618e3b2cf072d9170aed5a162'}\n\n```{.r .cell-code}\nFeaturePlot(pbmc3k.final, features = \"MS4A1\", \n            min.cutoff = 1, max.cutoff = 3)\n```\n\n::: {.cell-output-display}\n![](data_visualization_methods_in_seurat_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n**调整颜色：**\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-12_187f9a6400818bdc2886dc79a8dfd21b'}\n\n```{.r .cell-code}\nFeaturePlot(pbmc3k.final, features = \"MS4A1\", cols = c(\"lightblue\", \"red\"))\n```\n\n::: {.cell-output-display}\n![](data_visualization_methods_in_seurat_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# 通过RColorBrewer包取色\nlibrary(RColorBrewer)\nFeaturePlot(pbmc3k.final, features = \"MS4A1\", cols = brewer.pal(n = 10, name = \"RdBu\"))\n```\n\n::: {.cell-output-display}\n![](data_visualization_methods_in_seurat_files/figure-html/unnamed-chunk-12-2.png){width=672}\n:::\n:::\n\n\n也可以通过ggplot语法修改颜色：\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-13_eb059a13ca647ee13889030d4cc7b524'}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nFeaturePlot(pbmc3k.final, features = \"MS4A1\") +\n  scale_colour_gradientn(colours = rev(brewer.pal(n = 10, name = \"RdBu\")))\n```\n\n::: {.cell-output-display}\n![](data_visualization_methods_in_seurat_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nCalculate feature-specific contrast levels based on quantiles of non-zero expression. Particularly useful when plotting multiple markers。\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-14_8be2b78fecb8776cb049aa1425b0372f'}\n\n```{.r .cell-code}\nFeaturePlot(pbmc3k.final, \n            features = c(\"MS4A1\", \"PTPRCAP\"), \n            min.cutoff = \"q10\", \n            max.cutoff = \"q90\")\n```\n\n::: {.cell-output-display}\n![](data_visualization_methods_in_seurat_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n**多基因FeaturePlot：**\n\n通过添加`split.by`参数，来按照不同的样本组别来分别展示marker gene的表达。\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-15_916cd3971086f3cf6f43df9cdc1f6c25'}\n\n```{.r .cell-code}\nFeaturePlot(pbmc3k.final, \n            features = c(\"CD3D\", \"MS4A1\", \"CD79A\"), \n            split.by = \"groups\")\n```\n\n::: {.cell-output-display}\n![](data_visualization_methods_in_seurat_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n`FeaturePlot()`中还提供了`blend` 参数，来可视化两个基因的共表达情况（添加`blend = TRUE`）。注意`blend = TRUE`**只能适用于2个基因**，多个基因会报错 。\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-16_04c9534e8b0ba3b40804bd986761edad'}\n\n```{.r .cell-code}\nFeaturePlot(pbmc3k.final, \n            features = c(\"MS4A1\", \"CD79A\"), \n            blend = TRUE)\n```\n\n::: {.cell-output-display}\n![](data_visualization_methods_in_seurat_files/figure-html/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n\n如果想实现多个基因的话，可以使用`scCustomize`包中的`Plot_Density_Joint_Only()`函数绘制多基因联合密度图。该函数还依赖于Nebulosa包，因此还需要先从BiocManager安装该包：\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-17_5d57bde7279acd7c1eb6aa551f5dca29'}\n\n```{.r .cell-code}\ninstall.packages(\"scCustomize\")\nBiocManager::install(\"Nebulosa\")\n```\n:::\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-18_a28e9353cf13231a100df7cec99708a3'}\n\n```{.r .cell-code}\nlibrary(scCustomize)\nPlot_Density_Joint_Only(seurat_object = pbmc3k.final, \n                        features = c(\"CD3D\", \"MS4A1\", \"CD79A\"),\n                        custom_palette = BlueAndRed())\n```\n\n::: {.cell-output-display}\n![](data_visualization_methods_in_seurat_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n### Dot plots\n\nThe **size** of the dot corresponds to **the percentage of cells expressing the feature in each cluster**. The **color** represents the **average expression level**\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-19_4365cd57624aad54c621cfe063e4f680'}\n\n```{.r .cell-code}\nDotPlot(pbmc3k.final, \n        features = features) + \n  RotatedAxis()\n```\n\n::: {.cell-output-display}\n![](data_visualization_methods_in_seurat_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n通过添加`split.by`参数，来按照不同的样本组别来分别展示marker gene的表达。\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-20_85c94759fc298bb3253c0d2076a5fd45'}\n\n```{.r .cell-code}\nDotPlot(pbmc3k.final, \n        features = features, \n        split.by = \"groups\") + \n  RotatedAxis()\n```\n\n::: {.cell-output-display}\n![](data_visualization_methods_in_seurat_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n### Heatmap\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-21_57e350639a05dad39d2b1e5b7e1fa2ba'}\n\n```{.r .cell-code}\nDoHeatmap(subset(pbmc3k.final, downsample = 100), \n          features = features, \n          size = 3)\n```\n\n::: {.cell-output-display}\n![](data_visualization_methods_in_seurat_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\nDoHeatmap now shows a grouping bar, splitting the heatmap into groups or clusters. This can be changed with the `group.by` parameter. 默认的`group.by`为细胞分群信息，即按照细胞的分群作为分组依据来绘制热图：\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-22_f3f3d9eecede881fb9ba643a92886c34'}\n\n```{.r .cell-code}\nDoHeatmap(pbmc3k.final, \n          features = VariableFeatures(pbmc3k.final)[1:30], \n          cells = 1:1000, \n          size = 4, # 分组文字的大小\n          angle = 45) +  # 分组文字角度\n  NoLegend()\n```\n\n::: {.cell-output-display}\n![](data_visualization_methods_in_seurat_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n我们用meta.data中的任何列作为分群依据。例如这里的\"groups\"列：\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-23_995f9ff5afbf8406d6b6cea9015ac38b'}\n\n```{.r .cell-code}\ncolnames(pbmc3k.final@meta.data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"orig.ident\"         \"nCount_RNA\"         \"nFeature_RNA\"      \n[4] \"seurat_annotations\" \"percent.mt\"         \"RNA_snn_res.0.5\"   \n[7] \"seurat_clusters\"    \"groups\"            \n```\n:::\n\n```{.r .cell-code}\nDoHeatmap(pbmc3k.final, \n          features = VariableFeatures(pbmc3k.final)[1:30], \n          group.by = \"groups\",\n          cells = 1:1000, \n          size = 4, # 分组文字的大小\n          angle = 0) +  # 分组文字角度\n  NoLegend()\n```\n\n::: {.cell-output-display}\n![](data_visualization_methods_in_seurat_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n## 细胞分群图\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-24_4fbdc496a7a8ca3f34ca96e8fad08bd5'}\n\n```{.r .cell-code}\nDimPlot(pbmc3k.final, reduction = \"pca\")\n```\n\n::: {.cell-output-display}\n![](data_visualization_methods_in_seurat_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n\n```{.r .cell-code}\nDimPlot(pbmc3k.final, reduction = \"umap\")\n```\n\n::: {.cell-output-display}\n![](data_visualization_methods_in_seurat_files/figure-html/unnamed-chunk-24-2.png){width=672}\n:::\n:::\n\n\n进一步修饰\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-25_af8778094d37bdb74a69f34aa9557776'}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nDimPlot(pbmc3k.final, reduction = \"umap\") + \n  labs(title = \"Clustering of 2,700 PBMCs\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](data_visualization_methods_in_seurat_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n::: {.callout-note collapse=\"true\" icon=\"false\"}\n## Session Info\n\n\n::: {.cell hash='data_visualization_methods_in_seurat_cache/html/unnamed-chunk-26_d2159b51da2c94df8f8b49f9fb1a23b4'}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.2 (2023-10-31)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Sonoma 14.2.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Asia/Shanghai\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] scCustomize_2.0.1  RColorBrewer_1.1-3 ggplot2_3.4.4      Seurat_5.0.1      \n[5] SeuratObject_5.0.1 sp_2.1-2          \n\nloaded via a namespace (and not attached):\n  [1] rstudioapi_0.15.0      jsonlite_1.8.8         shape_1.4.6           \n  [4] magrittr_2.0.3         spatstat.utils_3.0-4   ggbeeswarm_0.7.2      \n  [7] rmarkdown_2.25         GlobalOptions_0.1.2    vctrs_0.6.5           \n [10] ROCR_1.0-11            spatstat.explore_3.2-5 paletteer_1.5.0       \n [13] janitor_2.2.0          htmltools_0.5.7        forcats_1.0.0         \n [16] sctransform_0.4.1      parallelly_1.36.0      KernSmooth_2.23-22    \n [19] htmlwidgets_1.6.4      ica_1.0-3              plyr_1.8.9            \n [22] lubridate_1.9.3        plotly_4.10.4          zoo_1.8-12            \n [25] igraph_1.6.0           mime_0.12              lifecycle_1.0.4       \n [28] pkgconfig_2.0.3        Matrix_1.6-5           R6_2.5.1              \n [31] fastmap_1.1.1          snakecase_0.11.1       fitdistrplus_1.1-11   \n [34] future_1.33.1          shiny_1.8.0            digest_0.6.34         \n [37] colorspace_2.1-0       rematch2_2.1.2         patchwork_1.2.0       \n [40] tensor_1.5             RSpectra_0.16-1        irlba_2.3.5.1         \n [43] progressr_0.14.0       timechange_0.2.0       fansi_1.0.6           \n [46] spatstat.sparse_3.0-3  httr_1.4.7             polyclip_1.10-6       \n [49] abind_1.4-5            compiler_4.3.2         withr_3.0.0           \n [52] fastDummies_1.7.3      MASS_7.3-60.0.1        tools_4.3.2           \n [55] vipor_0.4.7            lmtest_0.9-40          beeswarm_0.4.0        \n [58] httpuv_1.6.13          future.apply_1.11.1    goftest_1.2-3         \n [61] glue_1.7.0             nlme_3.1-164           promises_1.2.1        \n [64] grid_4.3.2             Rtsne_0.17             cluster_2.1.6         \n [67] reshape2_1.4.4         generics_0.1.3         gtable_0.3.4          \n [70] spatstat.data_3.0-4    tidyr_1.3.0            data.table_1.14.10    \n [73] utf8_1.2.4             spatstat.geom_3.2-7    RcppAnnoy_0.0.21      \n [76] ggrepel_0.9.5          RANN_2.6.1             pillar_1.9.0          \n [79] stringr_1.5.1          spam_2.10-0            RcppHNSW_0.5.0        \n [82] ggprism_1.0.4          later_1.3.2            circlize_0.4.16       \n [85] splines_4.3.2          dplyr_1.1.4            lattice_0.22-5        \n [88] survival_3.5-7         deldir_2.0-2           tidyselect_1.2.0      \n [91] miniUI_0.1.1.1         pbapply_1.7-2          knitr_1.45            \n [94] gridExtra_2.3          scattermore_1.2        xfun_0.41             \n [97] matrixStats_1.2.0      stringi_1.8.3          lazyeval_0.2.2        \n[100] yaml_2.3.8             evaluate_0.23          codetools_0.2-19      \n[103] tibble_3.2.1           cli_3.6.2              uwot_0.1.16           \n[106] xtable_1.8-4           reticulate_1.34.0      munsell_0.5.0         \n[109] Rcpp_1.0.12            globals_0.16.2         spatstat.random_3.2-2 \n[112] png_0.1-8              ggrastr_1.0.2          parallel_4.3.2        \n[115] ellipsis_0.3.2         dotCall64_1.1-1        listenv_0.9.0         \n[118] viridisLite_0.4.2      scales_1.3.0           ggridges_0.5.5        \n[121] leiden_0.4.3.1         purrr_1.0.2            rlang_1.1.3           \n[124] cowplot_1.1.2         \n```\n:::\n:::\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{
  "hash": "ec6c5e1ed9d098ce56c915a38ce4bbab",
  "result": {
    "markdown": "---\ntitle: \"寻找marker gene\"\n---\n\n\n> 参考原文：[*Introduction to scRNA-seq integration*](https://satijalab.org/seurat/articles/integration_introduction#identify-conserved-cell-type-markers)\n>\n> 原文发布日期：2023年10月31日\n\n# 数据导入\n\n这里我们导入[整合（integration）](/single_cell/seurat/integration.qmd)中完成`SCTransform`和整合的单细胞数据。这里的meta.data已经提前注释好了细胞类型（储存在\"seurat_annotations\"列中）。\n\n\n::: {.cell hash='marker_gene_identification_cache/html/unnamed-chunk-1_6be870435f453571b413bd0f60d6b7ba'}\n\n```{.r .cell-code}\nlibrary(Seurat)\nifnb <- readRDS(\"output/seurat_official/ifnb_integrated.rds\")\nifnb\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAn object of class Seurat \n27359 features across 13999 samples within 2 assays \nActive assay: SCT (13306 features, 3000 variable features)\n 3 layers present: counts, data, scale.data\n 1 other assay present: RNA\n 3 dimensional reductions calculated: pca, umap, integrated.dr\n```\n:::\n\n```{.r .cell-code}\nhead(ifnb, 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                  orig.ident nCount_RNA nFeature_RNA stim seurat_annotations\nAAACATACATTTCC.1 IMMUNE_CTRL       3017          877 CTRL          CD14 Mono\nAAACATACCAGAAA.1 IMMUNE_CTRL       2481          713 CTRL          CD14 Mono\nAAACATACCTCGCT.1 IMMUNE_CTRL       3420          850 CTRL          CD14 Mono\n                 nCount_SCT nFeature_SCT SCT_snn_res.0.6 seurat_clusters\nAAACATACATTTCC.1       1944          852               1               1\nAAACATACCAGAAA.1       1888          699               9               9\nAAACATACCTCGCT.1       1951          804               1               1\n```\n:::\n\n```{.r .cell-code}\ntable(ifnb$seurat_annotations)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n   CD14 Mono  CD4 Naive T CD4 Memory T    CD16 Mono            B        CD8 T \n        4362         2504         1762         1044          978          814 \n T activated           NK           DC  B Activated           Mk          pDC \n         633          619          472          388          236          132 \n       Eryth \n          55 \n```\n:::\n\n```{.r .cell-code}\nDimPlot(ifnb, \n        reduction = \"umap\", \n        group.by = c(\"stim\", \"seurat_annotations\"))\n```\n\n::: {.cell-output-display}\n![](marker_gene_identification_files/figure-html/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n\n# `FindMarkers`-在特定cluster之间寻找marker基因 {#sec-findmarkers_function}\n\n::: callout-caution\nFor a **much** faster implementation of the Wilcoxon Rank Sum Test,(default method for `FindMarkers`) please install the [`presto`](https://github.com/immunogenomics/presto) package:\n\n\n::: {.cell hash='marker_gene_identification_cache/html/unnamed-chunk-2_2cbeeee5cd89a084e0a62914cc074a0a'}\n\n```{.r .cell-code}\ndevtools::install_github('immunogenomics/presto')\n```\n:::\n\n:::\n\n作为演示，下面我们通过FindMarkers寻找CD16 Mono和CD14 Mono之间的差异基因（marker gene）。\n\n::: callout-important\n对于经过SCTransform归一化处理后的单细胞数据，在进行差异分析之前，需要先运行`PrepSCTFindMarkers()`，来预处理SCT assay。详细解释见[此链接](https://www.jianshu.com/p/fb2e43905559)。\n\n如果是基于`NormalizeData`标准化的单细胞数据，需要使用\"RNA\" assay进行差异分析，如果不是，需要通过`DefaultAssay(ifnb) <- \"RNA\"`进行设定。\n:::\n\n\n::: {.cell hash='marker_gene_identification_cache/html/unnamed-chunk-3_f5ff42ecf2f45370b42623ea367bce9d'}\n\n```{.r .cell-code}\n# 预处理SCT assay\nifnb <- PrepSCTFindMarkers(ifnb)\n# 指定细胞idents为注释信息\nIdents(ifnb) <- \"seurat_annotations\"\n# 执行FindMarkers\nmonocyte.de.markers <- FindMarkers(ifnb, \n                                   ident.1 = \"CD16 Mono\", \n                                   ident.2 = \"CD14 Mono\")\n# view results\nnrow(monocyte.de.markers)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6869\n```\n:::\n\n```{.r .cell-code}\nhead(monocyte.de.markers)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       p_val avg_log2FC pct.1 pct.2 p_val_adj\nVMO1       0   5.641894 0.767 0.078         0\nMS4A4A     0   3.238324 0.739 0.134         0\nFCGR3A     0   3.305623 0.976 0.382         0\nPLAC8      0   3.311271 0.620 0.107         0\nCXCL16     0   2.030972 0.918 0.439         0\nMS4A7      0   2.435979 0.973 0.519         0\n```\n:::\n:::\n\n\nThe results data frame has the following columns :\n\n-   `p_val` : p-value (unadjusted)\n\n-   `avg_log2FC` : log fold-change of the average expression between the two groups. Positive values indicate that the feature is more highly expressed in the first group.\n\n-   `pct.1` : The percentage of cells where the feature is detected in the first group\n\n-   `pct.2` : The percentage of cells where the feature is detected in the second group\n\n-   `p_val_adj` : Adjusted p-value, based on **Bonferroni correction** using all features in the dataset.\n\nIf the `ident.2` parameter is omitted or set to `NULL`, `FindMarkers()` will test for differentially expressed features **between the group specified by `ident.1` and all other cells**. Additionally, the parameter `only.pos` can be set to `TRUE` to only search for positive markers, i.e. features that are more highly expressed in the `ident.1` group.\n\n\n::: {.cell hash='marker_gene_identification_cache/html/unnamed-chunk-4_27e159c14b8b093d3bdfcff34e8ab934'}\n\n```{.r .cell-code}\nmonocyte.de.markers <- FindMarkers(ifnb, \n                                   ident.1 = \"CD16 Mono\", \n                                   ident.2 = NULL, \n                                   only.pos = TRUE)\nnrow(monocyte.de.markers)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4259\n```\n:::\n\n```{.r .cell-code}\nhead(monocyte.de.markers)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       p_val avg_log2FC pct.1 pct.2 p_val_adj\nFCGR3A     0   4.616088 0.976 0.152         0\nMS4A7      0   3.867491 0.973 0.196         0\nCXCL16     0   3.309239 0.918 0.178         0\nVMO1       0   6.207904 0.767 0.040         0\nMS4A4A     0   4.661394 0.739 0.051         0\nLST1       0   2.988332 0.887 0.205         0\n```\n:::\n:::\n\n\n# FindConservedMarkers-鉴定在所有conditions下保守的cell marker\n\nTo **identify canonical cell type marker genes that are conserved across conditions**, we provide the `FindConservedMarkers()` function. This function performs **differential gene expression testing** for each dataset/group and combines the p-values using meta-analysis methods from the `MetaDE` R package.\n\n在实际分析中，鉴定这些保守的cell marker主要用来辅助对cluster的注释：you can perform these same analysis on the unsupervised clustering results (stored in `seurat_clusters`), and **use these conserved markers to annotate cell types in your dataset**.\n\nWe can calculated the genes that are conserved markers irrespective of stimulation condition in cluster 6 (NK cells).\n\n::: callout-tip\n`FindConservedMarkers`函数会调用`metap`包，`metap`包需要`multtest`包，所以需要先安装这两个依赖包：\n\n\n::: {.cell hash='marker_gene_identification_cache/html/unnamed-chunk-5_6fc86153d2ea7f2ec379408bb99fa52f'}\n\n```{.r .cell-code}\nBiocManager::install('multtest')\ninstall.packages('metap')\n```\n:::\n\n:::\n\n`FindConservedMarkers`中的`grouping.var`参数用来指定meta.data中表示样本类型或者condition的列名，其他参数及其含义基本和`FindMarkers`一致。\n\n\n::: {.cell hash='marker_gene_identification_cache/html/unnamed-chunk-6_29c7b6de406369d655493963c77685b2'}\n\n```{.r .cell-code}\nnk.markers <- FindConservedMarkers(ifnb, \n                                   ident.1 = \"NK\", \n                                   grouping.var = \"stim\", \n                                   only.pos = TRUE)\nhead(nk.markers)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          CTRL_p_val CTRL_avg_log2FC CTRL_pct.1 CTRL_pct.2 CTRL_p_val_adj\nGNLY    0.000000e+00       85.120959      0.943      0.046   0.000000e+00\nNKG7    0.000000e+00       14.508633      0.953      0.085   0.000000e+00\nCTSW    0.000000e+00        7.597542      0.537      0.030   0.000000e+00\nFGFBP2  0.000000e+00        2.972433      0.500      0.021   0.000000e+00\nKLRC1   0.000000e+00        8.995502      0.379      0.004   0.000000e+00\nPRF1   3.646682e-300       11.866746      0.423      0.017  5.124682e-296\n          STIM_p_val STIM_avg_log2FC STIM_pct.1 STIM_pct.2 STIM_p_val_adj\nGNLY    0.000000e+00      20.3429036      0.956      0.059   0.000000e+00\nNKG7    0.000000e+00       6.0306403      0.950      0.081   0.000000e+00\nCTSW    0.000000e+00       8.2243914      0.592      0.035   0.000000e+00\nFGFBP2 4.578442e-158       0.8925926      0.259      0.016  6.434085e-154\nKLRC1   0.000000e+00       7.0700921      0.374      0.006   0.000000e+00\nPRF1    0.000000e+00       8.0777458      0.863      0.057   0.000000e+00\n            max_pval minimump_p_val\nGNLY    0.000000e+00              0\nNKG7    0.000000e+00              0\nCTSW    0.000000e+00              0\nFGFBP2 4.578442e-158              0\nKLRC1   0.000000e+00              0\nPRF1   3.646682e-300              0\n```\n:::\n:::\n\n\n# 可视化cell markers的表达\n\nThe `DotPlot()` function with the `split.by` parameter can be useful for viewing conserved cell type markers across conditions, showing both the expression level and the percentage of cells in a cluster expressing any given gene. Here we plot 2-3 strong marker genes for each of our 14 clusters.\n\n\n::: {.cell hash='marker_gene_identification_cache/html/unnamed-chunk-7_137b967f772b87a97135019d6fbc6119'}\n\n```{.r .cell-code}\nmarkers.to.plot <- c(\"CD3D\", \"CREM\", \"HSPH1\", \"SELL\", \"GIMAP5\", \"CACYBP\", \"GNLY\", \"NKG7\",\n                     \"CCL5\", \"CD8A\", \"MS4A1\", \"CD79A\", \"MIR155HG\", \"NME1\", \"FCGR3A\", \n                     \"VMO1\", \"CCL2\", \"S100A9\", \"HLA-DQA1\", \"GPR183\", \"PPBP\", \"GNG11\",\n                     \"HBA2\", \"HBB\", \"TSPAN13\", \"IL3RA\", \"IGJ\", \"PRSS57\")\nDotPlot(ifnb, \n        features = markers.to.plot, \n        cols = c(\"blue\", \"red\"), \n        dot.scale = 8, \n        split.by = \"stim\") +\n  RotatedAxis()\n```\n\n::: {.cell-output-display}\n![](marker_gene_identification_files/figure-html/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n::: {.callout-note collapse=\"true\" icon=\"false\"}\n## Session Info\n\n\n::: {.cell hash='marker_gene_identification_cache/html/unnamed-chunk-8_7a74307dd8efb544c2ae5ebc639293e0'}\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.2 (2023-10-31)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Sonoma 14.3\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Asia/Shanghai\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] Seurat_5.0.1       SeuratObject_5.0.1 sp_2.1-2          \n\nloaded via a namespace (and not attached):\n  [1] mathjaxr_1.6-0         RColorBrewer_1.1-3     rstudioapi_0.15.0     \n  [4] jsonlite_1.8.8         magrittr_2.0.3         TH.data_1.1-2         \n  [7] spatstat.utils_3.0-4   farver_2.1.1           rmarkdown_2.25        \n [10] vctrs_0.6.5            multtest_2.58.0        ROCR_1.0-11           \n [13] spatstat.explore_3.2-5 htmltools_0.5.7        plotrix_3.8-4         \n [16] sctransform_0.4.1      parallelly_1.36.0      KernSmooth_2.23-22    \n [19] htmlwidgets_1.6.4      ica_1.0-3              sandwich_3.1-0        \n [22] plyr_1.8.9             plotly_4.10.4          zoo_1.8-12            \n [25] igraph_1.6.0           mime_0.12              lifecycle_1.0.4       \n [28] pkgconfig_2.0.3        Matrix_1.6-5           R6_2.5.1              \n [31] fastmap_1.1.1          rbibutils_2.2.16       fitdistrplus_1.1-11   \n [34] future_1.33.1          shiny_1.8.0            numDeriv_2016.8-1.1   \n [37] digest_0.6.34          colorspace_2.1-0       patchwork_1.2.0       \n [40] tensor_1.5             RSpectra_0.16-1        irlba_2.3.5.1         \n [43] labeling_0.4.3         progressr_0.14.0       fansi_1.0.6           \n [46] spatstat.sparse_3.0-3  httr_1.4.7             TFisher_0.2.0         \n [49] polyclip_1.10-6        abind_1.4-5            compiler_4.3.2        \n [52] withr_3.0.0            mutoss_0.1-13          fastDummies_1.7.3     \n [55] MASS_7.3-60.0.1        tools_4.3.2            lmtest_0.9-40         \n [58] metap_1.9              httpuv_1.6.13          future.apply_1.11.1   \n [61] qqconf_1.3.2           goftest_1.2-3          glue_1.7.0            \n [64] nlme_3.1-164           promises_1.2.1         grid_4.3.2            \n [67] Rtsne_0.17             cluster_2.1.6          reshape2_1.4.4        \n [70] generics_0.1.3         gtable_0.3.4           spatstat.data_3.0-4   \n [73] tidyr_1.3.0            sn_2.1.1               data.table_1.14.10    \n [76] utf8_1.2.4             BiocGenerics_0.48.1    spatstat.geom_3.2-7   \n [79] RcppAnnoy_0.0.21       ggrepel_0.9.5          RANN_2.6.1            \n [82] pillar_1.9.0           stringr_1.5.1          spam_2.10-0           \n [85] RcppHNSW_0.5.0         limma_3.58.1           later_1.3.2           \n [88] splines_4.3.2          dplyr_1.1.4            lattice_0.22-5        \n [91] survival_3.5-7         deldir_2.0-2           tidyselect_1.2.0      \n [94] miniUI_0.1.1.1         pbapply_1.7-2          knitr_1.45            \n [97] gridExtra_2.3          scattermore_1.2        stats4_4.3.2          \n[100] xfun_0.41              Biobase_2.62.0         statmod_1.5.0         \n[103] matrixStats_1.2.0      stringi_1.8.3          lazyeval_0.2.2        \n[106] yaml_2.3.8             evaluate_0.23          codetools_0.2-19      \n[109] tibble_3.2.1           cli_3.6.2              uwot_0.1.16           \n[112] xtable_1.8-4           reticulate_1.34.0      Rdpack_2.6            \n[115] munsell_0.5.0          Rcpp_1.0.12            globals_0.16.2        \n[118] spatstat.random_3.2-2  png_0.1-8              parallel_4.3.2        \n[121] ellipsis_0.3.2         ggplot2_3.4.4          presto_1.0.0          \n[124] dotCall64_1.1-1        listenv_0.9.0          viridisLite_0.4.2     \n[127] mvtnorm_1.2-4          scales_1.3.0           ggridges_0.5.5        \n[130] leiden_0.4.3.1         purrr_1.0.2            rlang_1.1.3           \n[133] multcomp_1.4-25        mnormt_2.1.1           cowplot_1.1.2         \n```\n:::\n:::\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}